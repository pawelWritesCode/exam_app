[
	{
		"question": "Test implementation has which of the following major tasks:\n i. Developing and prioritizing test cases, creating est data, writing test procedures and optionally preparing the test harnesses and writing automated test scripts.\n ii. Creating the test suite from the test cases for efficient test execution.\n iii. Verifying that the test environment has been set up correctly.\n iv. Determining the exit criteria. ",
		"possibleAnswers": {
			"a": "i,ii,iii are true and iv is false",
			"b": "i, iv are true and ii is false",
			"c": "i, ii are true and iii, iv are false",
			"d": "ii, iii, iv are true and i is false"
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Which of the following is false?",
		"possibleAnswers": {
			"a": "In a system two different failures may have different severities",
			"b": "A system is necessarily more reliable after debugging for the removal of a fault.",
			"c": "A fault need not affect the reliability of a system",
			"d": "Undetected errors may lead to faults and eventually to incorrect behavior"
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "According to the ISTQB Glossary, debugging",
		"possibleAnswers": {
			"a": "Is part of the fundamental testing process",
			"b": "Includes the repair of the cause of a failure",
			"c": "Involves intentionally adding known defects",
			"d": "Follows the steps of a test procedure."
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "System test execution on a project is planned for eight weeks. After a week of testing, a tester suggests that the test objective stated in the test plan of 'findings as many defects as possible during system test' might be more closely met by redirecting the test effort according to which test principle?",
		"possibleAnswers": {
			"a": "Impossibility of exhaustive testing",
			"b": "Importance of early testing",
			"c": "The absence of errors fallacy",
			"d": "Defect clustering"
		},
		"answer": "d",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "A company recently purchased a commercial off-the-shelf (COTS) application to automate their bill-paying process. They now plan to run an acceptance test against the package prior to putting it into production. Which of the following is their most likely reason for testing?",
		"possibleAnswers": {
			"a": "To build confidence in the application",
			"b": "To detect bugs in the application",
			"c": "To gather evidence for a lawsuit",
			"d": "To train the users"
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Reporting Discrepancies as defects is a part of which phase?",
		"possibleAnswers": {
			"a": "Test Monitoring and Control",
			"b": "Test execution",
			"c": "Test completion",
			"d": "Test implementation"
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Choose the correct sentence about the developer's and the tester's mindsets",
		"possibleAnswers": {
			"a": "They are different, because a tester's primary goal is to raise bugs, and a developer's primary task is to debug and fix them.",
			"b": "They are different, because a developer's primary goal is to design and build a product and a tester's primary task is to verify its quality.",
			"c": "They are the same, because the primary goal for both of them is to care about the highest possible product quality.",
			"d": "They are the same, because tester and developer are just the project roles and any person ca fulfill both these roles."
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Select the right relation between quality assurance, quality control and testing",
		"possibleAnswers": {
			"a": "Testing is a synonym of quality assurance, which is a part of quality control.",
			"b": "Testing is a form of quality control, which is a part of quality assurance.",
			"c": "Quality control is a form of quality assurance, which is a synonym for testing.",
			"d": "Quality control is a synonym of quality assurance, which is a part of testing."
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Which of the following is true of the V-model?",
		"possibleAnswers": {
			"a": "It states that modules are tested against user requirements",
			"b": "It only models the testing phase",
			"c": "It specifies the test techniquest to be used",
			"d": "It includes the verification of designs"
		},
		"answer": "d",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Which of the following combinations correctly describes a valid approach to component testing:\ni) Functional testing of the component in isolation.\nii) Whitebox-based testing of the code without recording defects.\niii) Automated tests that are run until the component passes.\n Functional testing of the interfaces between modules.",
		"possibleAnswers": {
			"a": "i and ii",
			"b": "i, ii and iii",
			"c": "iii",
			"d": "ii and iv"
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Consider the following satements about regression tests:\nI. They may usefully be automated if they are well designed.\nII. They are the same as confirmation tests (re-tests).\nIII. They are a way to recue risk of change having an adverse effect elsewhere in the system.\nIV. They are only effective if automated.\nWhich pair of statements is true?",
		"possibleAnswers": {
			"a": "I and II",
			"b": "I and III",
			"c": "II and III",
			"d": "II and IV"
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Which of these is a functional test?",
		"possibleAnswers": {
			"a": "Checking the on-line bookings screen information and the database contents against the information on the letter to the customers.",
			"b": "Measuring response time on an on-line booking system.",
			"c": "Checking the effect of high volumes of traffic in a call-center system.",
			"d": "Checking how easy the system is to use."
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Consider the following statements about maintenance testing:\nI. It requires both re-test and regression test and may require additional new tests.\nII. It is testing to show how easy it will be to maintain the system.\nIII. It is difficult to scope and therefore needs careful risk and impact analysis.\nIV.It need not be done for emergency bug fixes.\nWhich of the satatements are true?",
		"possibleAnswers": {
			"a": "II and III",
			"b": "II and IV",
			"c": "I and III",
			"d": "I and IV"
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Why are static testing and dynamic testing described asa complementary?",
		"possibleAnswers": {
			"a": "Because they have different aims and differ in the types of defect they find",
			"b": "Because they have different aims but find the same types of defect",
			"c": "Because they share the aim of identifying defects but differ in the types of defect they find.",
			"d": "Because they share the aim of identifying defects and find the same types of defect."
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Of the following statements about reviews of specifications, which statement is true?",
		"possibleAnswers": {
			"a": "Reviews are a cost-effective early static test on the system.",
			"b": "Reviews are not generally const-effective as the meatings are time consuming and require preparation and follow up",
			"c": "Reviews must be controlled by the author",
			"d": "THere is no need to prepare for or follow up on reviews."
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "In a checklist-based approach, a checklist used by a tester may include:",
		"possibleAnswers": {
			"a": "An excerpt from the test plan describing test levels and test types defined in the project",
			"b": "A list of typical functional defects that were found in the previous versions of a software",
			"c": "A list of tools that should be bought prior to introducing the automation project",
			"d": "Desired usability characteristics of a software."
		},
		"answer": "d",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "You are responsible for the functional testing of the new mobile application for tourists. The application allows a user to plan a rouute, modify it, read info about the monuments, etc. All these functional requirements are documented in the form of use cases. Together with your team, you are planning to perform a review of the application regarding its functionality. Which review type will probably be the most benefical in this case?",
		"possibleAnswers": {
			"a": "Scenarios and dry runs",
			"b": "Checklist based",
			"c": "Perspective based",
			"d": "Role-based"
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Which of the following is an organizational success factor for reviews?",
		"possibleAnswers": {
			"a": "A culture of learning and process improvement is promoted.",
			"b": "Participants have adequate time to prepare.",
			"c": "The review is conducted in an atmosphere of trust.",
			"d": "Defects found are acknowledged, appreciated and handled objectively."
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Purchase discount is 0% for up to 500$, 5% is added for each additional 500$ up to 2000$, and 25% is applied for above 2000$. Which test inputs in $ would be selected for equivalence partitions?",
		"possibleAnswers": {
			"a": "-250, 700, 1400, 1800, 4000",
			"b": "250, 1000, 3000",
			"c": "-100, 250, 650, 1300, 1700, 2900",
			"d": "200, 720, 1600, 1800, 2100"
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Bank fee is 0% for balance less than 500$, 2% for less than 1000$ and 4% for 1000$ or more. Which test inputs in $ would be selected using BVA?",
		"possibleAnswers": {
			"a": "0.00, 0.01, 499.99, 500.00, 500.01",
			"b": "-0.01, 0.00, 499.99, 500.00, 999.99, 1000.00",
			"c": "-0.01, 499.99, 500.00, 999.99, 1000.00",
			"d": "0.00, 500.00, 500.01, 1000.00, 1000.01"
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Use case testing is useful for which of the following?\nP. Designing acceptance tests with users or customers.\nQ. Making sure that the mainstream business processes are tested.\nR. Finding defects in the interaction between components.\nS. Identifying the maximum and minimum values for every input fied.\nT. Identifying the percentage of statements exercised by a set of tests.",
		"possibleAnswers": {
			"a": "P,Q and S",
			"b": "P, Q and R",
			"c": "R, S and T",
			"d": "Q, S and T"
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Consider the following techniques. Which are static and which are dynamic techniques?\ni. Equivalence Partitioning.\nii. Use case testing\niii. Technical Review.\niv. Decision Table Testing.\nv. Decision testing\nvi. Inspections",
		"possibleAnswers": {
			"a": "iii and vi are static, i, ii, iv and v are dynamic.",
			"b": "ii, iii and vi are static, i, iv and v are dynamic.",
			"c": "i-iv are static, v-vi are dynamic.",
			"d": "vi is static, i-v are dynamic."
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "What is a key characteristic of white box testing techniques?",
		"possibleAnswers": {
			"a": "They are mainly used to assess the structure of a specification.",
			"b": "They are based on the skills and experience of the tester.",
			"c": "They are used both to measure coverage and to design tests to increase coverage.",
			"d": "They use a formal or informal model of the software or component"
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "How do experience-based techniques differ from black box techniques?",
		"possibleAnswers": {
			"a": "They depend on the tester's understanding of the way the system is structured rather than on a documented record of what the system should do",
			"b": "They depend on having older testers rather than young testers",
			"c": "They depend on an individual's personal view rather than on a documented record of what the system should do",
			"d": "They depend on a documented record of what the system should do rather than on an individual's personal view."
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "What can we be sure about, if we achieved 100% statement coverage of a given code?",
		"possibleAnswers": {
			"a": "That our tests executed all executable statements in the code",
			"b": "That we tested any possible behavior of the code",
			"c": "That our tests achieved 100% decision coverage as well",
			"d": "That there are no decision points in the code"
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "You test the program that takes a sequence of numbers as the input and returns these numbers sorted. Before you start your testing, you get the idea (without referring to any documentation) to check what happens, if you enter the empty set of numbers as the input. This is an example of which technique?",
		"possibleAnswers": {
			"a": "Black-box testing",
			"b": "White-box testing",
			"c": "Error guessing",
			"d": "Checklist-based testing"
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Select the sentence that correctly explains the issue of using test techniques during the exploratory testing session.",
		"possibleAnswers": {
			"a": "All test techniques are allowed, because exploratory testing does not impose on tester any particular way of acting.",
			"b": "All test techniques are forbidden, because exploratory testing is based on knowledge, intuition and experience.",
			"c": "All test techniques are forbidden, because exploratory testing is not a scripted testing and test actions cannot be planned in advance.",
			"d": "All test techniques are allowed, because exploratory tester needs to have a test basis from which he derives test ideas."
		},
		"answer": "a",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Consider the following statements\ni. A defect may be closed without being fixed\nii. Defects may not be raised against documentation\niii. The final stage of defect tracking is fixing\niv.The defect record does not include information on test environments\nv. Defects should be raised when someone other than the author of the software performs the test ",
		"possibleAnswers": {
			"a": "i and ii are true, iii, iv and v are false",
			"b": "i and v are true, ii, iii and iv are false",
			"c": "i, iv and v are true, ii and iii are false",
			"d": "i is true, ii, iii, iv and v are false"
		},
		"answer": "b",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "From a testing perspective, what are the main purposes of configuration management?\ni) identifying the version of the software under test.\nii) Controlling the version of testware items.\niii) Developing new testware items.\niv) Tracking changes to testware items.\nv) analyzing the need for new testware items.",
		"possibleAnswers": {
			"a": "ii, iv and v",
			"b": "i, iii and v",
			"c": "i, ii and iv",
			"d": "ii, iii and iv"
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Put the test cases that implement the following test conditions into the best order for the test execution schedule, for a test that is checking modifications of customers on a database.\n1. Print modified customer record.\n2. Change customer address: house number and street name.\n3. Caputre and print the on-screen error message.\n4. Change customer address: postal code\n5. Confirm existing customer is on the database by opeing that record.\n6. Close the customer record and close the database.\n7.Try to add a new customer with no details at all.",
		"possibleAnswers": {
			"a": "5,4,2,1,3,7,6",
			"b": "5,1,2,3,4,7,6",
			"c": "5,4,2,1,7,3,6",
			"d": "4,2,5,1,6,7,3"
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Consider the following list of either product or project risks:\nI. An incorrect calculation of fees might shortchange the organization.\nii. a vendor might fail to deliver a system component on time\niii. a defect might allow hackers to gain administrative privileges\niv. a skills gap might occur in a new technology used in the system.\nv. a defect-prioritization process might overload the development team. Which of the following statements are true?",
		"possibleAnswers": {
			"a": "iii and v are primarily product risks, while i, ii and iv are primarily project risks",
			"b": "ii and v are primarily product risks and i, iii and v are primarily project risks.",
			"c": "i is primarily a product risk and ii, iii, iv and v are primarily project risks.",
			"d": "i and iii are primarily product risks, awhile ii, iv and v are primarily project risks."
		},
		"answer": "d",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Consider the following excerpt of a document:\nThe following metrics should be collected:\n*Number of defects found, split by defect type and detection phase\n* Time to repair (for each raised bug)\n* Number of test cases planned, designed, implemented, executed, automated\n* Test results for each test run (passed, failed, blocked, not executed)\nThis is an example of a part of which document?",
		"possibleAnswers": {
			"a": "Test policy",
			"b": "Test case",
			"c": "Test procedure",
			"d": "Test plan"
		},
		"answer": "d",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Which of the following are benefits and which are risks of using tools to support testing?\n1.Over-reliance on the tool\n2. Greater consistency and repeatability\n3. Objective assessment\n4. Unrealistic expectations\n5. Underestimating the effort required to maintain the test assets generated by the tool\n6. Ease of access to information about tests or testing\n7. Repetitive work is reduced",
		"possibleAnswers": {
			"a": "Benefits: 1,2,3 and 7, Risks: 4,5 and 6",
			"b": "Benefits: 3,4,6 and 7, Risks: 1,2 and 5",
			"c": "Benefits: 2,3,5 and 6, Risks: 1,4 and 7",
			"d": "Benefits: 2,3,6 and 7, Risks: 1,4 and 5"
		},
		"answer": "d",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "hich of the following would not be done as part of selecting a tool for an organization?",
		"possibleAnswers": {
			"a": "Evaluate the tool features against clear requirements and objective criteria.",
			"b": "Identify internal requirements for coaching and mentoring in the use of the tool",
			"c": "Roll out the tool to as many users as possible within the organization",
			"d": "Assess organizational maturity, strengths and weaknesses"
		},
		"answer": "c",
		"tip": "",
		"explanation": ""
	},
	{
		"question": "Which one of the following answers describes a test condition?",
		"possibleAnswers": {
			"a": "A distinguishing characteristic of a component or system",
			"b": "A testable aspect of a component or system identified as a basis for testing",
			"c": "The degree to which a software product provides functions which meet stated and implied needs when the software is used under specified conditions",
			"d": "Test cases designed to execute combinations of conditions and actions resulting from them"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Definition of feature according to glossary\nb) Is correct. From glossary\nc) Is not correct. Definition of functionality suitability according to glossary\nd) Is not correct. Like Definition of Decision table testing according to\nglossary"
	},
	{
		"question": "Which of the following statements is a valid objective for testing?",
		"possibleAnswers": {
			"a": "THe test should start as late as possible so that development had enough time to create a good product",
			"b": "To validate whether the test object works as expected by the users and other stakeholders",
			"c": "To prove that all possible defects are identified",
			"d": "To prove that any remaining defects will not cause any failures"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Contradiction to principle 3: “Early testing saves time and\nmoney”\nb) Is correct. This is one objective of testing\nc) Is not correct. Principle #2 states that exhaustive testing is impossible,\nso one can never prove that all defects were identified\nd) Is not correct. To make an assessment whether a defect will cause a\nfailure or not, one must detect the defect first. Saying that no remaining\ndefect will cause a failure implicitly means that all defects were found.\nThis again contradicts principle #2"
	},
	{
		"question": "Which of the following statements correctly describes the difference between testing and debugging?",
		"possibleAnswers": {
			"a": "Testing identifies the source of defects; debugging analyzes the defects and proposes prevention activities",
			"b": "Dynamic testing shows failures caused by defects; debugging eliminates the defects, which are the source of failures",
			"c": "Testing removes faults; but debugging removes defects that cause the faults",
			"d": "Dynamic testing precents the causes of failures; debugging removes the failures"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Testing does not identify the source of defects,\ndebugging identifies the source of defects\nb) Is correct. Dynamic testing can show failures that are caused by defects\nin the software. Debugging eliminates the defects, which are the source\nof failures\nc) Is not correct. Testing does not remove faults, but debugging removes\nfaults, which is synonyms for defects, that may cause the failures\nd) Is not correct. Dynamic testing does not directly prevent the causes of\nfailures (defects) but detects the presence of defects"
	},
	{
		"question": "Which one of the statements below describes the most common situation for a failure discovered during testing or in production?",
		"possibleAnswers": {
			"a": "The product crashed when the user selected an option in a dialog box",
			"b": "The wrong version of a compiled source code file was included in the build",
			"c": "The computation algorithm used the wrong input variables",
			"d": "The developer misinterpreted the requirement for the algorithm"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. A crash is clearly noticeable by the user\nb) Is not correct. This is a defect, not a failure since there is something\nwrong in the code. It may not result in a visible or noticeable failure, for\nexample if the changes in the source code file are only in comments\nc) Is not correct. The use of wrong input variables may not result in a\nvisible or noticeable failure, for example if nobody uses this particular\nalgorithm; or if the wrong input variable has a similar value to the\ncorrect input variable; or if the FALSE result of the algorithm is not used\nd) Is not correct. This type of fault will not necessarily lead to a failure; for\nexample, if no one uses this special algorithm"
	},
	{
		"question": "Mr. Test has been testing software applications on mobile devices for a period of 5 years. He has a wealth of experience in testing mobile applications and achieves better results in a shorter time than others. Over several months, MR. Test did not modify the existing automated test cases and did not create any new test cases. This leads to fewer and fewer defects being found by executing the tests. What principle of testing did mR. Test not observe?",
		"possibleAnswers": {
			"a": "Testing depends on the environemnt",
			"b": "Exhaustive testing is not possible",
			"c": "Repeating of same tests will not find new defects",
			"d": "Defects cluster together"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Testing is context dependent, regardless of it being\nmanual or automated (principle #6), but does not result in detecting a\ndecreasing number of faults as described above\nb) Is not correct. Exhaustive testing is impossible, regardless of the\namount of effort put into testing (principle #2)\nc) Is correct. Principle #5 says “If the same tests are repeated over and\nover again, eventually these tests no longer find any new defects. To\ndetect new defects, existing tests and test data may need changing,\nand new tests may need to be written.” Automated regression testing of\nthe same test cases will not bring new findings\nd) Is not correct. ”Defect cluster together” (principle #4). A small number of\nmodules usually contain most of the defects, but this does not mean\nthat fewer and fewer defects will be found"
	},
	{
		"question": "In what way can testing be part of Quality Assurance?",
		"possibleAnswers": {
			"a": "It ensures that requirements are detailed enough ",
			"b": "Testing reduces the risk of poor software quality",
			"c": "It ensures that standards in the organization are followed",
			"d": "It measures the quality of software in terms of number of executed test cases"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Static testing (reviews) contributes, but could not ensure,\nthat requirements are detailed enough\nb) Is correct. Testing contributes to the achievement of quality in a variety\nof ways, e.g., such as reducing the risk of inadequate software quality\nc) Is not correct. This is quality assurance but not testing\nd) Is not correct. The quality cannot be measured by counting the number\nof executed test cases without knowing the outcome"
	},
	{
		"question": "Which of the following activities is part of the main activity 'test analysis' in the test process?",
		"possibleAnswers": {
			"a": "Identifying any required infrastructure and tools",
			"b": "Creating test suites from test scripts",
			"c": "Analyzing lessons learned for process improvement",
			"d": "Evaluating the test basis for testability"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. This activity is performed during the test design activity\n(test design)\nb) Is not correct. This activity is performed during the test implementation\nactivity (test implementation)\nc) Is not correct. This activity is performed during the test completion\nactivity (test completion)\nd) Is correct. This activity is performed during the test analysis activity (test\nanalysis)"
	},
	{
		"question": "Match the following test work products (1-4) with the right description (A-D)\n\n1. Test suite\n2. Test case\n3. Test script\n4. Test charter\n\nA. A set of test scripts to be executed in a specific test run\nB. A set of instructions for the execution of a test\nC. Contains expected results\nD. Documentation of test activities in session-based exploratory testing",
		"possibleAnswers": {
			"a": "1A, 2C, 3B, 4D",
			"b": "1D, 2B, 3A, 4C",
			"c": "1A, 2C, 3D, 4B",
			"d": "1D, 2C, 3B, 4A"
		},
		"answer": "a",
		"tip": "",
		"explanation": "Glossary defines the following tests as:\n• Test suite: “A set of test scripts or test procedures to be executed in\na specific test run.” (1A)\n• Test case: “A set of preconditions, inputs, actions (where\napplicable), expected results and post conditions, developed based\non test conditions” (2C)\n• Test script: “A sequence of instructions for the execution of a test”\n(3B)\n• Test charter: “Documentation of test activities in session-based\nexploratory testing” (4D)\nThus:\na) Is correct\nb) Is not correct\nc) Is not correct\nd) Is not correct"
	},
	{
		"question": "How can white-box testing be applied during user acceptance testing?",
		"possibleAnswers": {
			"a": "To check if large volumes of data can be transferred between integrated systems",
			"b": "To check if all code statements and code decision paths have been executed",
			"c": "To check if all work process flows have been covered",
			"d": "To cover all web page navigations"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Relevant for integration testing\nb) Is not correct. Relevant for component testing\nc) Is correct. For acceptance testing, tests are designed to cover all\nworkflows defined in the functional requirements documents.\nd) Is not correct. Relevant for system testing"
	},
	{
		"question": "Which of the following statements comparing component testing and system testing is TRUE?",
		"possibleAnswers": {
			"a": "Component testing verifies the functionality of software modules, program objects and classes that are separately testable, whereas system testing verifies interfaces between components and interactions between different parts of the system",
			"b": "Test cases for component testing are usually derived from component specifications, design specifications or data models, whereas test cases for the system testing are usually derived from requirement specifications or use cases",
			"c": "Component testing only focuses on functional characteristics, whereas system testing focuses on functional and non-functional characteristics",
			"d": "Component testing is the responsibility of the testers, whereas system testing typically is the responsibility of the users of the system"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. System testing does not test interfaces between\ncomponents and interactions between different parts of the system; this\nis a target of integration tests\nb) Is correct. Examples of work products that can be used as a test basis\nfor component testing include detailed design, code, data model,\ncomponent specifications. Examples of work products for system\ntesting include system and software requirement specifications\n(functional and non-functional) use cases\nc) Is not correct. Component testing does not ONLY focus on functional\ncharacteristics\nd) Is not correct. Component tests are also executed by developers,\nwhereas system testing typically is the responsibility of (independent)\ntesters"
	},
	{
		"question": "Which one of the following is TRUE",
		"possibleAnswers": {
			"a": "The purpose of regression testing is to check if the correction has been successfully implemented while the purpose of confirmation testing is to confirm that the correction has no side effects",
			"b": "The purpose of regression testing is to detect unintended side effects, while the prpose of confirmation testing is to check if the system is still working in a new environment",
			"c": "The purpose of regression testing is to detect unintended side effects, while the purpose of confirmation testing is to check if the original defect has been fixed ",
			"d": "The purpose of regression testing is to check if the new functionality is working, while the purpose of confirmation testing is to check if the original defect has been fixed."
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Regression testing does not check successful\nimplementation of corrections and confirmation testing does not check\nfor side effects\nb) Is not correct. The statement about confirmation testing should be\nabout regression testing\nc) Is correct. See reasons from incorrect answers\nd) Is not correct. Testing new functionality is not regression testing"
	},
	{
		"question": "Which one of the following is the BEST definition of an incremental development model?",
		"possibleAnswers": {
			"a": "Defining requirements designing software and testing are done in phases where in each phase a piece of the system is added",
			"b": "A phase in the development process should begin when the previous phase is completed ",
			"c": "Testing is viewed as a separate phase which takes place after development has been completed",
			"d": "Testing is added to development as an increment"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Incremental development involves establishing requirements,\ndesigning, building, and testing a system in pieces\nb) Is not correct. This is a sequential model\nc) Is not correct. This describes the waterfall model\nd) Is not correct. Testing alone is not an increment/additional step in the\ndevelopment"
	},
	{
		"question": "Which of the following should NOT be a trigger for maintenance testing?",
		"possibleAnswers": {
			"a": "Decision to test the maintainability of the software",
			"b": "Decision to test the system after migration to a new operating platform",
			"c": "Decision to test if archived data is possible to be retrieved",
			"d": "Decision to test after 'hot fixes'"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. This is maintainability testing, not maintenance testing\nb) Is not correct. This is a trigger for maintenance testing: Operational\ntests of the new environment as well as of the changed software\nc) Is not correct. This is the trigger for maintenance testing: testing\nrestore/retrieve procedures after archiving for long retention periods\nd) Is not correct. This is the trigger for maintenance testing: Reactive\nmodification of a delivered software product to correct emergency\ndefects that have caused actual failures"
	},
	{
		"question": "Which of the following options are roles in a formal review",
		"possibleAnswers": {
			"a": "Developer, Moderator, Review leader, Reviewer, Tester",
			"b": "Author, Moderator, Manager, Reviewer, Developer",
			"c": "Author, Manager, Review leader, Reviewer, Designer",
			"d": "Author, Moderator, Review leader, Reviewer, Scribe"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. Tester and developer are NOT roles in a formal review\nb) Is not correct. Developer is NOT a role in a formal review\nc) Is not correct. Designer is NOT a role in a formal review\nd) Is correct. See reasons from incorrect answers"
	},
	{
		"question": "Which activities are carried out within the planning of a formal review?",
		"possibleAnswers": {
			"a": "Collection of metrics for the evaluation of the effectiveness of the review",
			"b": "Answer any questions the participants may have",
			"c": "Definition and Verification of fulfillment of entry criteria for the review",
			"d": "Evaluation of the review findings against the exit criteria"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. ‘Collection of metrics’ belongs to the main activity “Fixing\nand Reporting”\nb) Is not correct. ‘Answer any question.’ belongs to the main activity\n“Initiate Review”\nc) Is correct. The checking of entry criteria takes place in the planning of a\nformal review\nd) Is not correct. The evaluation of the review findings against the exit\ncriteria belongs to the main activity “Issue communication and analysis”"
	},
	{
		"question": "Which of the review types below is the BEST option to choose when the review must follow a formal process based on rules and checklists?",
		"possibleAnswers": {
			"a": "Informal Review",
			"b": "Technical Review",
			"c": "Inspection",
			"d": "Walkthrough"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Informal review does not use a formal process\nb) Is not correct. Use of checklists are optional\nc) Is correct. Inspection is a formal process based on rules and checklists\nd) Is not correct. Does not explicitly require a formal process and the use\nof checklists is optional"
	},
	{
		"question": "Which of the following statements about static testing are MOST true",
		"possibleAnswers": {
			"a": "Static testing is a cheap way to detect and remove defects",
			"b": "Static testing makes dynamic testing less challenging",
			"c": "Static testing makes it possible to find run-time problems early in the lifecycle",
			"d": "When testing safety-critical system, static testing has less value because dynamic testing finds the defects better"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Defects found early are often much cheaper to remove than\ndefects detected later in the lifecycle\nb) Is not correct. Dynamic testing still has its challenging because they find\nother types of defects\nc) Is not correct. This is dynamic testing\nd) Is not correct. Static testing is important for safety-critical computer\nsystems"
	},
	{
		"question": "You will be invited to a review. The work product to be reviewed is a description of the in-house document creation process. The aim of the description is to present the work distribution between the different roles involved in the process in a way that ca be clearly understood by everyone.\n You will be invited to a checklist-based review. The checlist will also be sent to you. It includes the following points:\ni. Is the person who performs the activity clearly identified for eas activity?\nii. Are the entry criteria clearly defined for each activity?\niii. Are the exit criteria clearly defined for each activity?\niv. Are the spporting roles and their scope of work clearly defined for each activity?\n\nIn the following we should an excerpt of the work result to be reviewed, for which you should use the checlist above:\n\n'After checking the customer documentation for completness and correctness, the software architect creates the system specification. Once the software architect has completed the system specification, he invites testers and verifiers to the review. A checlist describes the scope of the review. Each invited reviewer creates review comments - if necessary - and concludes the review with an official review done-comment.'\n\n Which of the following statements about your review is correct?",
		"possibleAnswers": {
			"a": "Point ii) of the checklist has been violated because it is not clear which condition must be fulfilled to invite to the review",
			"b": "You notice that in addition to the tester and the virifier, the validator must also be invited. Since this item is not part of your checklist, you do not create a corresponding comment",
			"c": "Point iii) of the checklist has been violated as it is not clear what marks the review as completed",
			"d": "Point i) of the checklist has been iolated because it is not clear who is providing the checklist for the invitation to the review"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. It is described that the software architect must have\ncompleted the system specification\nb) Is not correct. ‘Checklist-based’, last sentence it is documented that you\nshould also look for defects outside the checklist\nc) Is not correct. It is described: every reviewer did his review done\ncomment\nd) Is correct. It is described that a checklist is available, but who provides\nthe checklist?"
	},
	{
		"question": "What is checklist-based testing?",
		"possibleAnswers": {
			"a": "A test technique in which tests are derived based on the tester's knowledge of past faults, or general knowledge of failures",
			"b": "A test technique based on an analysis of the specification of a component or system",
			"c": "An experience-based test technique whereby the experienced tester used a list of items to be noted, checked or remembered or a set of rules or criteria against which a product must be verified",
			"d": "An approach to testing where the testers dynamically design and execute tests based on their knowledge, exploration of the test item and the results of previous tests"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. This is error guessing\nb) Is not correct. This is black-box test technique\nc) Is correct. See reasons from incorrect answers\nd) Is not correct. This is exploratory testing"
	},
	{
		"question": "Which one of the following options is categorized as a black-box test technique?",
		"possibleAnswers": {
			"a": "A technique based on analysis of the architecture",
			"b": "A technique checking that the test object is working according to the detailed design",
			"c": "A technique based on the knowledge of past faults, or general knowledge of failures",
			"d": "A technique based on formal requirements"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. This is a white-box test technique\nb) Is not correct. This is a white-box test technique\nc) Is not correct. This is an experience-based test technique\nd) Is correct. Black-box test techniques are based on an analysis of the\nappropriate test basis (e.g., formal requirements documents,\nspecifications, use cases, user stories)"
	},
	{
		"question": "The following statement refers to decision coverage:\n\n'When the code contains only a single if statment and no loops or CASE statements, and its execution is not nested within the test, any single test case we run will result in 50^ decision coverage'\n\nWhich of the following statement is correct?",
		"possibleAnswers": {
			"a": "The statement is true. Any single test case provides 100% statement coverage and therefore 50% decision coverage",
			"b": "The statement is true. Any single test case would cause the outcome of the if statement to be either true or false",
			"c": "The statement is false. A single test case can only guarantee 25% decision coverage in this case",
			"d": "The statement is false. The statement is too broad. It may be correct or not, depending on the tested software."
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. While the given statement is true, the explanation is not.\nThe relationship between statement and decision coverage is\nmisrepresented\nb) Is correct. Since any test case will cause the outcome of the “if”\nstatement to be either TRUE or FALSE, by definition we achieved 50%\ndecision coverage\nc) Is not correct. A single test case can give more than 25% decision\ncoverage, this means according to the statement above always 50 %\ndecision coverage\nd) Is not correct. The statement is specific and always true, because each\ntest case achieves 50 % decision coverage"
	},
	{
		"question": "Which one of the following is the description of statement coverage?",
		"possibleAnswers": {
			"a": "It is a metric, which is the percentage of test cases that have been executed",
			"b": "It is a metric, which is the percentage of statements in the source code that have been executed",
			"c": "It is a metric, which is the number of statements in the source code that have been executed by test cases that are passed",
			"d": "It is a metric, that gives a true/false confirmation if all statements are covered or not"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Statement coverage measures the percentage of\nstatements exercised by test cases\nb) Is correct. Statement testing exercises the executable statements in the\ncode. Statement coverage is measured as the number of statements\nexecuted by the tests divided by the total number of executable\nstatements in the test object, normally expressed as a percentage\nc) Is not correct. The coverage does not measure pass/fail\nd) Is not correct. It is a metric and does not provide true/false statements"
	},
	{
		"question": "Which statement about the relationship between statement coverage and decision coverage is true?",
		"possibleAnswers": {
			"a": "100% decision coverage also guarantees 100% statement coverage",
			"b": "100% statement coverage also guarantees 100% decision coverage",
			"c": "50% decision coverage also guarantees 50% statement coverage",
			"d": "Decision coverage can never reach 100%"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. The statement is true. Achieving 100% decision coverage\nguarantees 100% statement coverage\nb) Is not correct. The statement is false because achieving 100 %\nstatement coverage does not in any case mean that the decision\ncoverage is 100%\nc) Is not correct. The statement is false because we can only do\nstatements about 100% values\nd) Is not correct. The statement is false"
	},
	{
		"question": "For which of the following situations is exploratory testing suitable",
		"possibleAnswers": {
			"a": "When time pressure requires speeding up the execution of tests already specified",
			"b": "When the system is developed incrementally and no test charter is available",
			"c": "When testers are available who have enough knowledge of similar applications and technologies",
			"d": "When an advanced knowledge of the system already exists and evidence is to be if it should be tested intensively"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Exploratory testing is not suitable to speed up tests,\nwhich are already specified. It is most useful when there are few or\ninappropriate specified requirements or significant time pressure on\ntesting\nb) Is not correct. The absence of a test charter, which may have been\nderived from the test analysis, is a poor precondition for the use of\nexploratory testing\nc) Is correct. Exploratory tests should be performed by experienced\ntesters with knowledge of similar applications and technologies\nd) Is not correct. Explorative testing alone is not suitable to provide\nevidence that the test was very intensive, instead the evidence is\nprovided in combination with other test methods"
	},
	{
		"question": "An employee's bonus is to be calculated. It cannot be negative, but it can be calculated down to zero. The bonus is based on the length of employment:\n*Less than or equal to 2 years\n* More than 2 years but less than 5 years\n* 5 to 10 years inclusively\n* Longer than 10 year\n\nWhat is the minumum number of test cases required to cover all valid equivalence partitions for calculating the bonus?",
		"possibleAnswers": {
			"a": "3",
			"b": "5",
			"c": "2",
			"d": "4"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. One too few (see the four correct partitions in the correct\nanswer)\nb) Is not correct. One too much (see the four correct partitions in the\ncorrect answer)\nc) Is not correct. Two too few (see the four correct partitions in the correct\nanswer)\nd) Is correct. The 4 equivalence partitions correspond to the description in\nthe question, i.e., at least one test case must be created for each\nequivalence partition:\n1. Equivalence partition: 0 ≤ employment time ≤ 2\n2. Equivalence partition: 2 < employment time < 5\n3. Equivalence partition: 5 ≤ employment time ≤ 10\n4. Equivalence partition: 10 < employment time"
	},
	{
		"question": "A speed control and reporting system has the following characteristics:\n* If you drive 50km/h, but no more than 55kn/h you will be warned.\n* If you drive faster than 55km/h but no more than 60km/h you will be fined.\n*If you drive faster than 60km/h your driving licence will be suspended\n*The speed in km/h is available to the system as an integer value.\n\nWhich would be the most likely set of values (km/h) identified by applying the boundary value analysis, where only the values on the boundaries of the equivalence classes are selected?",
		"possibleAnswers": {
			"a": "0, 49, 50, 54, 59, 60",
			"b": "50, 55, 60",
			"c": "49, 50, 54, 55, 60, 62",
			"d": "50, 51, 55, 56, 60, 61"
		},
		"answer": "d",
		"tip": "",
		"explanation": "he following partitions can be identified:\n1. <= 50, boundary value 50\n2. 51 – 55 boundary values 51, 55\n3. 56 – 60 boundary values 56, 60\n4. >=61 boundary value 61\nBoundary value according to glossary V.3.2: A minimum or maximum value\nof an ordered equivalence partition.\nThus:\na) Is not correct. Does not include all necessary boundary values, but it\nincludes additional values: 0, 49, and 59, which are not boundary\nvalues in this equivalence partition\nb) Is not correct. Does not include all necessary boundary values. 51 and\n55 are missing\nc) Is not correct. Does not include necessary boundary values but it\nincludes additional values: 49, 62, and 54, which are not boundary\nvalues in this equivalence partition\nd) Is correct. includes all necessary boundary values"
	},
	{
		"question": "A video application has the following requirement: The application shall allow playing a video on the following display resolution:\n1.640x480\n2. 1280x720\n3. 1600x1200\n4. 1920x1080\n\nWhich of the following list of test cases is a result of applying the equivalence partitioning test technique to test this requirement?",
		"possibleAnswers": {
			"a": "Verify that the application can play a video on a display of size 1920x1080 (1 test case)",
			"b": "Verify that the application can play a video on a display of size 640x480 and 1920x1080 (2 test cases)",
			"c": "Verify that the application can play a video on each of the display sizes in the requirement (4 test cases)",
			"d": "Verify that the application can play a video on any one of the display sizes in the requirement (1 test case)"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. See reason from correct answer\nb) Is not correct. See reason from correct answer\nc) Is correct. This is a case where the requirement gives an enumeration\nof discrete values. Each enumeration value is an equivalence class by\nitself; therefore, each will be tested when using equivalence partitioning\ntest technique\nd) Is not correct. See reason from correct answer"
	},
	{
		"question": "Which of the following statements BEST describes how tasks are divided between the test manager and the tester?",
		"possibleAnswers": {
			"a": "The test manager plans testing activities and chooses the standards to be followed, while the tester chooses the tools and set the tools usage guidelines",
			"b": "The test manager plans, coordinates and controls the testing activities while the tester automates the tests",
			"c": "The test manager plans, monitor, and controls the testing activities, while the tester designs tests and decides on the release of the test object",
			"d": "The test manager plans and organizes the testing and specifies the test cases, while the tester executes the tests"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Selection of tools is a test manager task\nb) Is correct. See reasons from incorrect answers\nc) Is not correct. The tester does not decide on the release of the test\nobject\nd) Is not correct. The tester specifies the test cases, the test manager\ndoes the prioritization"
	},
	{
		"question": "Which of the following metrics would be MOST useful to monitor during test execution?",
		"possibleAnswers": {
			"a": "Percentage of executed test cases",
			"b": "Average number of testers involved in the test execution",
			"c": "Coverage of requirements by source code",
			"d": "Percentage of test cases already created and reviewed"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Test case execution (e.g., number of test cases run/not run,\nand test cases passed/failed)\nb) Is not correct. This metric can be measured, but its value is low. The\nnumber of testers does not give any information about the quality of the\ntest object or test progress\nc) Is not correct. the coverage of requirements by source code is not\nmeasured during test execution. At most, the TEST(!) coverage of the\ncode or requirements is measured\nd) Is not correct. This metric is part of test preparation and not test\nexecution"
	},
	{
		"question": "Which of the following can affect and be part of the (initial) test planning?",
		"possibleAnswers": {
			"a": "Budget limitations",
			"b": "Test log",
			"c": "Failure rate",
			"d": "Use cases"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Making decisions about what to test are documented in the\ntest plan. This means when you are planning the test and there are\nbudget limitations, prioritizing is needed; what should be tested and\nwhat should be omitted\nb) Is not correct. Test monitoring and control\nc) Is not correct. Common test metrics\nd) Is not correct. It is a part of test analysis"
	},
	{
		"question": "Which of the following lists contains only typical exit criteria from testing?",
		"possibleAnswers": {
			"a": "Reliability measures, test coverage, schedule and status about fixing defect and remaining risks",
			"b": "Reliability measures, test coverage, degree of tester's independence and product completeness",
			"c": "Reliability measures, test coverage, test cost, availability of test environment, time to market and product completeness",
			"d": "Time to market, remaining defects, tester qualification, availability of testable use cases, test coverage and test cost"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. See reasons from incorrect answers\nb) Is not correct. The “degree of tester’s independence” does not play a\nrole in exit criteria\nc) Is not correct. “Availability of test environment” is an entry criterion\nd) Is not correct. “The Qualification of Tester” is not a typical exit criterion"
	},
	{
		"question": "Which one of the following is NOT included in a test summary report?",
		"possibleAnswers": {
			"a": "Defining pass/fail criteria and objectives of testing",
			"b": "Deviations from the test approach",
			"c": "Measurements of actual progress against exit criteria",
			"d": "Evaluation of the uality of the test object"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. This information has been defined earlier in the test project\nb) Is not correct. This information is included in a test report: information\non what occurred during a test period\nc) Is not correct. This information is included in a test report:\n• Status of testing and product quality with respect to the exit\ncriteria or definition of done\n• Metrics of defects, test cases, test coverage, activity progress,\nand resource consumption\nd) Is not correct. This information is included in a test report: Information\nand metrics to support recommendations and decisions about future\nactions, such as an assessment of defects remaining, the economic\nbenefit of continued testing, outstanding risks, and the level of\nconfidence in the tested software"
	},
	{
		"question": "The project develops a 'smart' heating thermostat. The control algorithms of the thermostat were modeled as Matlab/Simulink models and run on the internet connected server. The thermostat uses the specifications of the server to trigger the heating valves.\n\nThe test manager has defined the following test strategy/approach in the test plan:\n1. The acceptance test for the whole system is executed as an experience-based test.\n2. The control algorithms on the server are checked against standard of the energy saving regulation\n3. The functional test of the thermostat is performed as risk-based testing.\n4. The security tests of data/communication via the internet are executed together with external security experts.\n\nWhat four common types of test strategies/approaches did the test manager implement in the test plan?",
		"possibleAnswers": {
			"a": "Methodical, analytical, reactive and regression-averse",
			"b": "Analytical, standard-compliant, consultative and reactive",
			"c": "Model-based, methodical, analytical and consultative",
			"d": "Regression-averse, consultative, reactive and methodical"
		},
		"answer": "b",
		"tip": "",
		"explanation": "The possible mappings of points 1 to 4 can be justified as follows:\n1. Approach 3 is analytical: Risk-based testing is an example of an\nanalytical approach, where tests are designed and prioritized based\non the level of risk\n2. Approach 2 is standard-compliant: The control algorithms is checked\nagainst industry-specific standard of the energy saving regulation.\n3. Approach 4 is consultative: This type of test strategy is driven\nprimarily by the advice, guidance, or instructions of stakeholders,\nbusiness domain experts, or technology experts, who may be\noutside the test team or outside the organization itself\n4. Approach 1 is reactive: Exploratory testing is a common technique\nemployed in reactive strategies, whereby the explorative testing is\nassigned to the experience-based testing category\nThus:\na) Is not correct\nb) Is correct\nc) Is not correct\nd) Is not correct"
	},
	{
		"question": "Which one of the following is the characteristic of a metrics-based approach for test estimation",
		"possibleAnswers": {
			"a": "Budget which was used by a previous similar test project",
			"b": "Overall experience collected in interviews with test managers",
			"c": "Estimation of effort for test automation agreed in the test team",
			"d": "Average of calculations collected from business experts"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. The metrics-based approach: estimating the testing effort\nbased on metrics of former similar projects or based on typical values\nb) Is not correct. This is expert-based approach: estimating the tasks\nbased on estimates made by the owners of the tasks or by experts\nc) Is not correct. This is expert-based approach: estimating the tasks\nbased on estimates made by the responsible team of the tasks or by\nexperts\nd) Is not correct. This is expert-based approach: estimating the tasks\nbased on estimates made by the owners of the tasks or by experts"
	},
	{
		"question": "You are testing a new version of software for a coffee machine. The machine can prepare different types of coffee based on four categories. i.e., coffee size, sugar, milk and syrup. The criteria are as follows:\n*coffee size (small, medium, large)\n* Sugar (none, 1 unit, 2 units, 3 units, 4 units)\n* Milk (yes or no)\n* Coffee flavor syrup(no syrup, caramel, hazelnut, vanilla)\n\nNow you are writing a defect report with the following information\n*Title: Low coffee temperature.\n* Short summary: When you select coffee with milk, the time for preparing coffee is too long and the temperature of the beverage is too low (less than 40 degrees).\n* Expected result: The temperature of coffee should be standard (about 75 degrees)\n* Degree of risk: Medium\n* Priority: Normal\n\nWhat valuable information was ommitted in the above defect report?",
		"possibleAnswers": {
			"a": "The actual test results",
			"b": "Identification of the tested software version",
			"c": "Status of the defect",
			"d": "Ideas for improving the test case"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. The test result is given in the short summary\nb) Is correct. When testing different versions of software, identifying\ninformation is necessary\nc) Is not correct. You are just writing the defect report; hence, the status is\nautomatically open\nd) Is not correct. This information is useful for the tester but does not need\nto be included in the defect report"
	},
	{
		"question": "Which one of the following is MOST likely to be a benefit for test execution tools?",
		"possibleAnswers": {
			"a": "It is easy to create regression tests",
			"b": "It is easy to maintain version control of test assets",
			"c": "It is easy to design tests for security testing",
			"d": "It is easy to run regression tests"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. The benefits are not when creating regressions tests,\nmore in executing them\nb) Is not correct. This is done by configuration management tools\nc) Is not correct. This needs specialized tools\nd) Is correct. Reduction in repetitive manual work (e.g., running regression\ntests, environment set up/tear down tasks, re-entering the same test\ndata, and checking against coding standards), thus saving time"
	},
	{
		"question": "Which one of the following test tools is mostly suitable for developers rather than testers?",
		"possibleAnswers": {
			"a": "Requirement management tool",
			"b": "Configuration management tool",
			"c": "Static analysis tools",
			"d": "Performance testing tools"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Requirement management tools are not particularly\nsuitable for developers\nb) Is not correct. Configuration management tools are not particularly\nsuitable for developers\nc) Is correct. Static analysis tools are especially suitable for developers\nd) Is not correct. Performance testing tools are not better suited for\ndevelopers than for testers"
	},
	{
		"question": "Which of the following provides the definition of the term test case?",
		"possibleAnswers": {
			"a": "Subset of the value domain of a variable within a component or system in which all values are expected to be treated the same based on the specification",
			"b": "A set of preconditions, inputs, actions, expected results and post conditions, developed based on test conditions",
			"c": "Work products produced during the test process for use in planning, designing, executing, evaluating and reporting on testing",
			"d": "A source to determine an expected result to compare with actual result of the system under test"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Based on definition of equivalence partition\nb) Is correct. Based on definition from Glossary\nc) Is not correct. Based on Glossary definition of testware\nd) Is not correct. Based on definition of test oracle"
	},
	{
		"question": "Which of the following is a typical objective of testing",
		"possibleAnswers": {
			"a": "To find defects and failures",
			"b": "To validate the project plan works as required",
			"c": "Ensuring of complete testing",
			"d": "Comparing actual results with expected results"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. One of the major objectives of testing\nb) Is not correct. Validation of the project plan would be a project\nmanagement activity\nc) Is not correct. Contradiction to principle #2; complete/exhaustive testing\nis not possible\nd) Is not correct. “Comparing actual results with expected results” is a test\nperforming activity, but not a test objective"
	},
	{
		"question": "Which of the following is an example of a failure in a car cruise control system?",
		"possibleAnswers": {
			"a": "The developer of the system forgot to rename variables after a cut-and-paste operation",
			"b": "Unnecessary code that sounds an alarm when reversing was included in the system",
			"c": "The system stops maintaining a set speed when the radio volume is increased or decreased",
			"d": "The design specification for the system wrongly states speeds"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. This is an example of a mistake made by the developer\nb) Is not correct. This is an example of a defect (something wrong in the\ncode that may cause a failure)\nc) Is correct. This is a deviation from the expected functionality - a cruise\ncontrol system should not be affected by the radio\nd) Is not correct. This is an example of a defect (something wrong in a\nspecification that may cause a failure if subsequently implemented)"
	},
	{
		"question": "Which of the following is a defect rather than a root cause in a fitness tracker",
		"possibleAnswers": {
			"a": "Because the author of the requirements was unfamiliar with the domain of fitness training, he therefore wrongly assumed that users wanted heartbeat in beats per hour",
			"b": "The tester of the smartphone interface had not been trained in state transition testing, so missed a major defect",
			"c": "An incorrect configuration variable implemented for the GPS function could cause location\nproblems during daylight saving times",
			"d": "Because the designer had never worked on wearable devices before, she as designer of\nthe user interface therefore misunderstood the effects of reflected sunlight"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. The lack of familiarity of the requirements author with the\nfitness domain is a root cause\nb) Is not correct. The lack of training of the tester in state transition testing\nwas one of the root causes of the defect (the developer presumably\ncreated the defect, as well)\nc) Is correct. The incorrect configuration data represents faulty software in\nthe fitness tracker (a defect), that may cause failures\nd) Is not correct. The lack of experience in designing user interfaces for\nwearable devices is a typical example of a root cause of a defect"
	},
	{
		"question": "As a result of risk analysis, more testing is being directed to those areas of the system under test\nwhere initial testing found more defects than average.\nWhich of the following testing principles is being applied?",
		"possibleAnswers": {
			"a": "Beware of the pesticide paradox",
			"b": "Testing is context dependent",
			"c": "Absence-of-errors is a fallacy",
			"d": "Defects cluster together"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. ‘Beware of the pesticide paradox’ is concerned with re-\nrunning the same tests and their fault-finding effectiveness decreasing\nb) Is not correct. This testing principle is concerned with performing testing\ndifferently based on the context (e.g., games vs safety-critical)\nc) Is not correct. This testing principle is concerned with the difference\nbetween a tested and fixed system and a validated system. No ‘errors’\ndoes not mean the system is fit for use\nd) Is correct. If clusters of defects are identified (areas of the system\ncontaining more defects than average), then testing effort should be\nfocused on these areas"
	},
	{
		"question": "Given the following test activities and tasks:\nA. Test design\nB. Test implementation\nC. Test execution\nD. Test completion\n1. Entering change requests for open defect reports\n2. Identifying test data to support the test cases\n3. Prioritizing test procedures and creating test data\n4. Analyzing discrepancies to determine their cause\nWhich of the following BEST matches the activities with the tasks?",
		"possibleAnswers": {
			"a": "A-2, B-3, C-4, D-1",
			"b": "A-2, B-1, C-3, D-4",
			"c": "A-3, B-2, C-4, D-1",
			"d": "A-3, B-2, C-1, D-4"
		},
		"answer": "a",
		"tip": "",
		"explanation": "The correct pairing of test activities and tasks is:\nA. Test design – (2) Identifying test data to support the test cases\nB. Test implementation – (3) Prioritizing test procedures and creating\ntest data\nC. Test execution – (4) Analyzing discrepancies to determine their\ncause\nD. Test completion – (1) Entering change requests for open defect\nreports\nThus:\na) Is correct\nb) Is not correct\nc) Is not correct\nd) Is not correct"
	},
	{
		"question": "Which of the following BEST describes how value is added by maintaining traceability between the\ntest basis and test artifacts?",
		"possibleAnswers": {
			"a": "Maintenance testing can be fully automated based on changes to the initial requirements",
			"b": "It is possible to determine if a new test case has increased coverage of the requirements",
			"c": "Test managers can identify which testers found the highest severity defects",
			"d": "Areas that may be impacted by side-effects of a change can be targeted by confirmation\ntesting"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Traceability will allow existing test cases to be linked with\nupdated and deleted requirements (although there is no support for new\nrequirements), but it will not help with the automation of maintenance\ntesting\nb) Is correct. If all test cases are linked with requirements, then whenever\na new test case (with traceability) is added, it is possible to see if any\npreviously uncovered requirements are covered by the new test case\nc) Is not correct. Traceability between the test basis and test artifacts will\nnot provide information on which testers found high-severity defects,\nand, even if this information could be determined, it would be of limited\nvalue\nd) Is not correct. Traceability can help with identifying test cases affected\nby changes, however areas impacted by side-effects would be the\nfocus of regression testing"
	},
	{
		"question": "Which of the following qualities is MORE likely to be found in a tester’s mindset rather than in a\ndeveloper’s?",
		"possibleAnswers": {
			"a": "A tester ́s mindset tends to grow and mature as the tester gains experience",
			"b": "Ability to see what might go wrong",
			"c": "Good communication with team members",
			"d": "Focus on getting all things done"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Both developers and testers gain from experience\nb) Is correct. Developers are often more interested in designing and\nbuilding solutions than in contemplating what might be wrong with those\nsolutions\nc) Is not correct. Both developers and testers should be able to\ncommunicate well\nd) Is not correct. Testers shall focus on the quality, not on the quantity"
	},
	{
		"question": "Given the following statements about the relationships between software development activities\nand test activities in the software development lifecycle:\n1. Each development activity should have a corresponding testing activity\n2. Reviewing should start as soon as final versions of documents become available\n3. The design and implementation of tests should start during the corresponding\ndevelopment activity\n4. Testing activities should start in the early stages of the software development\nlifecycle\nWhich of the following CORRECTLY shows which are true and false?",
		"possibleAnswers": {
			"a": "True – 1, 2; False – 3, 4",
			"b": "True – 2, 3; False – 1, 4",
			"c": "True – 1, 2, 4; False – 3",
			"d": "True – 1, 4; False – 2, 3"
		},
		"answer": "d",
		"tip": "",
		"explanation": "Considering each statement:\n1. Each development activity should have a corresponding testing\nactivity. TRUE\n2. Reviewing should start as soon as final versions of documents\nbecome available. FALSE – it should start as soon as drafts are\navailable\n3. The design and implementation of tests should start during the\ncorresponding development activity. FALSE – the analysis and\ndesign of tests should start during the corresponding development\nactivity, not the implementation\n4. Testing activities should start in the early stages of the software\ndevelopment lifecycle. TRUE\nThus:\na) Is not correct\nb) Is not correct\nc) Is not correct\nd) Is correct"
	},
	{
		"question": "Given that the testing being performed has the following attributes:\n• Based on interface specifications\n• Focused on finding failures in communication\n• The test approach uses both functional and structural test types\nWhich of the following test levels is MOST likely being performed?",
		"possibleAnswers": {
			"a": "Integration testing",
			"b": "Acceptance testing",
			"c": "System testing",
			"d": "Component testing"
		},
		"answer": "a",
		"tip": "",
		"explanation": "Considering the scenario:\n1. ‘testing is based on interface specifications’ – the test basis for\nintegration testing includes interface specifications (along with\ncommunication protocol specification), while these are not included\nfor any of the other test levels\n2. ‘testing is focused on finding failures in communication’ - failures in\nthe communication between tested components is included as a\ntypical failure for integration testing, but failures in communication is\nnot included for any of the other test levels\n3. ‘the test approach uses both functional and structural test types’ -\nfunctional and structural test types are both included as possible\napproaches for integration testing, and would also be appropriate for\nany of the other test levels, although they are only otherwise\nexplicitly mentioned in the syllabus for system testing\nThus:\na) Is correct\nb) Is not correct\nc) Is not correct\nd) Is not correct"
	},
	{
		"question": "Which of the following statements about test types and test levels is CORRECT?",
		"possibleAnswers": {
			"a": "Functional and non-functional testing can be performed at system and acceptance test\nlevels, while white-box testing is restricted to component and integration testing",
			"b": "Functional testing can be performed at any test level, while white-box testing is restricted to\ncomponent testing",
			"c": "It is possible to perform functional, non-functional and white-box testing at any test level",
			"d": "Functional and non-functional testing can be performed at any test level, while white-box\ntesting is restricted to component and integration testing"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. It is possible to perform any of the test types (functional,\nnon-functional, white-box) at any test level - so, although it is correct\nthat functional and non-functional testing can be performed at system\nand acceptance test levels, it is incorrect to state that white-box testing\nis restricted to component and integration testing\nb) Is not correct. It is possible to perform any of the test types (functional,\nnon-functional, white-box) at any test level - so, it is incorrect to state\nthat white-box testing is restricted to component testing\nc) Is correct. It is possible to perform any of the test types (functional, non-\nfunctional, white-box) at any test level\nd) Is not correct. It is possible to perform any of the test types (functional,\nnon-functional, white-box) at any test level - so, it is incorrect to state\nthat white-box testing is restricted to component testing and integration\ntesting"
	},
	{
		"question": "Which of the following statements BEST compares the purposes of confirmation testing and\nregression testing?",
		"possibleAnswers": {
			"a": "The purpose of regression testing is to ensure that all previously run tests still work\ncorrectly, while the purpose of confirmation testing is to ensure that any fixes made to one\npart of the system have not adversely affected other parts",
			"b": "The purpose of confirmation testing is to check that a previously found defect has been\nfixed, while the purpose of regression testing is to ensure that no other parts of the system\nhave been adversely affected by the fix",
			"c": "The purpose of regression testing is to ensure that any changes to one part of the system\nhave not caused another part to fail, while the purpose of confirmation testing is to check\nthat all previously run tests still provide the same results as before",
			"d": "The purpose of confirmation testing is to confirm that changes to the system were made\nsuccessfully, while the purpose of regression testing is to run tests that previously failed to\nensure that they now work correctly"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Although the description of regression testing is largely\ncorrect, the description of confirmation testing (which should be testing\na defect has been fixed) is not correct\nb) Is correct. The descriptions of both confirmation and regression testing\nmatch the intent of those in the syllabus\nc) Is not correct. Although the description of regression testing is largely\ncorrect, the description of confirmation testing (re-running all previously\nrun tests to get the same results) is not correct, as the purpose of\nconfirmation testing is to check that tests that previously failed now\npass (the fix worked)\nd) Is not correct. Although the description of confirmation testing is largely\ncorrect, the description of regression testing (re-running tests that\npreviously failed) is not correct (this is a more detailed description of\nconfirmation testing)"
	},
	{
		"question": "Which of the following statements CORRECTLY describes a role of impact analysis in\nMaintenance Testing?",
		"possibleAnswers": {
			"a": "Impact analysis is used when deciding if a fix to a maintained system is worthwhile",
			"b": "Impact analysis is used to identify how data should be migrated into the maintained system",
			"c": "Impact analysis is used to decide which hot fixes are of most value to the user",
			"d": "Impact analysis is used to determine the effectiveness of new maintenance test cases"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Impact analysis may be used to identify those areas of the\nsystem that will be affected by the fix, and so the extent of the impact\n(e.g., necessary regression testing) can be used when deciding if the\nchange is worthwhile\nb) Is not correct. Although testing migrated data is part of maintenance\ntesting (see conversion testing), impact analysis does not identify how\nthis is done\nc) Is not correct. Impact analysis shows which parts of a system are\naffected by a change, so it can show the difference between different\nhot fixes in terms of the impact on the system, however it does not give\nany indication of the value of the changes to the user\nd) Is not correct. Impact analysis shows which parts of a system are\naffected by a change; it cannot provide an indication of the\neffectiveness of test cases"
	},
	{
		"question": "Which of the following statements CORRECTLY reflects the value of static testing?",
		"possibleAnswers": {
			"a": "By introducing reviews, we have found that both the quality of specifications and the time\nrequired for development and testing have increased",
			"b": "Using static testing means we have better control and cheaper defect management due to\nthe ease of detecting defects later in the lifecycle",
			"c": "Now that we require the use of static analysis, missed requirements have decreased and\ncommunication between testers and developers has improved",
			"d": "Since we started using static analysis, we find coding defects that might have not been\nfound by performing only dynamic testing"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. Reviews should increase the quality of specifications,\nhowever the time required for development and testing should decrease\nb) Is not correct. Detecting defects is generally easier earlier in the\nlifecycle\nc) Is not correct. Reviews will result in fewer missed requirements and\nbetter communication between testers and developers, however this is\nnot true for static analysis\nd) Is correct. This is a benefit of static analysis"
	},
	{
		"question": "Which of the following statements on the use of checklists in a formal review is CORRECT?",
		"possibleAnswers": {
			"a": "As part of the review planning, the reviewers create the checklists needed for the review",
			"b": "As part of the issue communication, the reviewers fill in the checklists provided for the\nreview",
			"c": "As part of the review meeting, the reviewers create defect reports based on the checklists\nprovided for the review",
			"d": "As part of the review initiation, the reviewers receive the checklists needed for the review"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. During planning it is decided whether checklists are used.\nThe preparation of the checklists is not part of the planning. In addition,\nthe reviewers are neither involved in the planning, nor responsible for\nthe creation of the checklists\nb) Is not correct. During issue communication, any potential defects that\nhave been identified in the individual review are communicated. The\ncompletion of checklists by the reviewers already takes place, if at all,\nduring individual review\nc) Is not correct. During review session, the reviewers communicate any\npotential defects of the work product that they did identify during the\nindividual review. Defect reports are only created during the fixing and\nreporting activity\nd) Is correct. Initiating the review (“Kick-off”) involves distributing the work\nproduct and other materials, like checklists"
	},
	{
		"question": "Which of the following CORRECTLY matches the roles and responsibilities in a formal review?",
		"possibleAnswers": {
			"a": "Manager – Decides on the execution of reviews",
			"b": "Review Leader - Ensures effective running of review meetings",
			"c": "Scribe – Fixes defects in the work product under review",
			"d": "Moderator – Monitors ongoing cost-effectiveness"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. The management decides about performing the review\nb) Is not correct. The moderator, not the review leader should ensure the\neffective running of review meetings\nc) Is not correct. The author fixes the work product under review\nd) Is not correct. The manager monitors ongoing cost-effectiveness"
	},
	{
		"question": "The reviews being used in your organization have the following attributes:\n• There is a role of a scribe\n• The purpose is to detect potential defects\n• The review meeting is led by the author\n• Reviewers find potential defects by individual review\n• A review report is produced\nWhich of the following review types is MOST likely being used?",
		"possibleAnswers": {
			"a": "Informal review",
			"b": "walkthrough",
			"c": "Technical review",
			"d": "Inspection"
		},
		"answer": "b",
		"tip": "",
		"explanation": "Considering the attributes:\n• There is a role of a scribe – specified for walkthroughs, technical\nreviews, and inspections; thus, the reviews being performed cannot\nbe informal reviews\n• The purpose is to detect potential defects – the purpose of detecting\npotential defects is specified for all types of review.\n• The review meeting is led by the author – this is not allowed for\ninspections and is typically not the author for technical reviews, but\nis part of walkthroughs, and allowed for informal reviews\n• Reviewers find potential issues by individual review - all types of\nreviews can include individual review (even informal reviews)\n• A review report is produced - all types of reviews can produce a\nreview report, although it would be less likely for an informal review\nThus:\na) Is not correct\nb) Is correct\nc) Is not correct\nd) Is not correct"
	},
	{
		"question": "You have been asked to take part in a checklist-based review of the following excerpt from the\nrequirements specification for a library system:\nLibrarians can:\n1. Register new borrowers\n2. Return books from borrowers\n3. Accept fines from borrowers\n4. Add new books to the system with their ISBN, author and title\n5. Remove books from the system\n6. Get system responses within 5 seconds\nBorrowers can:\n7. Borrow a maximum of 3 books at one time\n8. View the history of books they have borrowed/reserved\n9. Be fined for failing to return a book within 3 weeks\n10. Get system responses within 3 seconds\n11. Borrow a book at no cost for a maximum of 4 weeks\n12. Reserve books (if they are on-loan)\nAll users (librarians and borrowers):\n13. Can search for books by ISBN, author, or title\n14. Can browse the system catalogue\n15. The system shall respond to user requests within 3 seconds\n16. The user interface shall be easy-to-use\nYou have been assigned the checklist entry that requires you to review the specification for\ninconsistencies between individual requirements (i.e., conflicts between requirements).\nWhich of the following CORRECTLY identifies inconsistencies between pairs of requirements?",
		"possibleAnswers": {
			"a": "6-10, 6-15, 7-12",
			"b": "6-15, 9-11",
			"c": "6-10, 6-15, 9-11",
			"d": "6-15, 7-12"
		},
		"answer": "b",
		"tip": "",
		"explanation": "Considering the potential inconsistencies:\n• 6-10 – If librarians should get system responses within 5 seconds, it\nis NOT inconsistent for borrowers to get system responses within 3\nseconds.\n• 6-15 - If librarians should get system responses within 5 seconds, it\nis inconsistent for all users to get system responses within 3\nseconds.\n• 7-12 – If borrowers can borrow a maximum of 3 books at one time it\nis NOT inconsistent for them to also reserve books (if they are on-\nloan).\n• 9-11 – If a borrower can be fined for failing to return a book within 3\nweeks it is inconsistent for them to also be allowed to borrow a book\nat no cost for a maximum of 4 weeks – as the length of valid loans\nare different.\nOf the potential inconsistencies, 6-15 and 9-11 are valid inconsistencies.\nThus:\na) Is not correct\nb) Is correct\nc) Is not correct\nd) Is not correct"
	},
	{
		"question": "Which of the following provides the BEST description of exploratory testing?",
		"possibleAnswers": {
			"a": "A testing practice in which an in-depth investigation of the background of the test object is\nused to identify potential weaknesses that are examined by test cases",
			"b": "An approach to testing whereby the testers dynamically design and execute tests based on\ntheir knowledge, exploration of the test item and the results of previous tests",
			"c": "An approach to test design in which test activities are planned as uninterrupted sessions of\ntest analysis and design, often used in conjunction with checklist-based testing",
			"d": "Testing based on the tester's experience, knowledge, and intuition"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Exploratory testing is often carried out when timescales\nare short, so making in-depth investigations of the background of the\ntest object is unlikely\nb) Is correct. Glossary definition\nc) Is not correct. Based on the Glossary definition of session-based\ntesting, but with test execution replaced by test analysis\nd) Is not correct. Glossary definition of experience-based testing"
	},
	{
		"question": "Which of the following BEST matches the descriptions with the different categories of test\ntechniques?\n1. Coverage is measured based on a selected structure of the test object\n2. The processing within the test object is checked\n3. Tests are based on defects’ likelihood and their distribution\n4. Deviations from the requirements are checked\n5. User stories are used as the test basis\nUsing notation for the following 4 options:\nBlack - Black-box test techniques\nWhite - White-box test techniques\nExperience - Experience-based test techniques",
		"possibleAnswers": {
			"a": "Black – 4, 5 White – 1, 2; Experience – 3",
			"b": "Black – 3 White – 1, 2; Experience – 4, 5",
			"c": "Black – 4 White – 1, 2; Experience – 3, 5",
			"d": "Black – 1, 3, 5 White – 2; Experience – 4"
		},
		"answer": "a",
		"tip": "",
		"explanation": "The correct pairing of descriptions with the different categories of test\ntechniques is:\n• Black-box test techniques\nDeviations from the requirements are checked (4) User stories are\nused as the test basis (5)\n• White-box test techniques\nCoverage is measured based on a selected structure of the test\nobject (1) The processing within the test object is checked (2)\n• Experience-based test techniques\nTests are based on defects’ likelihood and their distribution (3)\nThus:\na) Is correct\nb) Is not correct\nc) Is not correct\nd) Is not correct"
	},
	{
		"question": "A fitness app measures the number of steps that are walked each day and provides feedback to\nencourage the user to keep fit.\nThe feedback for different numbers of steps should be:\nUp to 1000 - Couch Potato!\nAbove 1000, up to 2000 - Lazy Bones!\nAbove 2000, up to 4000 - Getting There!\nAbove 4000, up to 6000 - Not Bad!\nAbove 6000 - Way to Go!\nWhich of the following sets of test inputs would achieve the BEST equivalence partition coverage?",
		"possibleAnswers": {
			"a": "0, 1000, 2000, 3000, 4000",
			"b": "1000, 2001, 4000, 4001, 6000",
			"c": "123, 2345, 3456, 4567, 5678",
			"d": "666, 999, 2222, 5555, 6666"
		},
		"answer": "d",
		"tip": "",
		"explanation": "The following valid equivalence partitions can be identified:\n1. Up to 1000 - Couch Potato!\n2. Above 1000, up to 2000 - Lazy Bones!\n3. Above 2000, up to 4000 - Getting There!\n4. Above 4000, up to 6000 - Not Bad!\n5. Above 6000 - Way to Go!\nThe sets of test inputs therefore cover the following partitions:\na) Is not correct. 0 (1), 1000 (1), 2000 (2), 3000 (3), 4000 (3) – 3 partitions\n(out of 5)\nb) Is not correct. 1000 (1), 2001 (3), 4000 (3), 4001 (4), 6000 (4) – 3\npartitions (out of 5)\nc) Is not correct. 123 (1), 2345 (3), 3456 (3), 4567 (4), 5678 (4) – 3\npartitions (out of 5)\nd) Is correct. 666 (1), 999 (1), 2222 (3), 5555 (4), 6666 (5) – 4 partitions\n(out of 5)"
	},
	{
		"question": "A smart home app measures the average temperature in the house over the previous week and\nprovides feedback to the occupants on their environmental friendliness based on this temperature.\nThe feedback for different average temperature ranges (to the nearest °C) should be:\nUp to 10°C - Icy Cool!\n11°C to 15°C - Chilled Out!\n16°C to 19°C - Cool Man!\n20°C to 22°C - Too Warm!\nAbove 22°C - Hot & Sweaty!\nUsing BVA (only Min- and Max values), which of the following sets of test inputs provides the\nhighest level of boundary coverage?",
		"possibleAnswers": {
			"a": "0°C, 11°C, 20°C, 22°C, 23°C",
			"b": "9°C, 15°C, 19°C, 23°C, 100°C",
			"c": "10°C, 16°C, 19°C, 22°C, 23°C",
			"d": "14°C, 15°C, 18°C, 19°C, 21°C, 22°C"
		},
		"answer": "c",
		"tip": "",
		"explanation": "For the input equivalence partitions given, the above used boundary value\ntechnique yields the following 8 coverage items:\n10°C, 11°C, 15°C, 16°C, 19°C, 20°C, 22°C, 23°C.\nHence, the options have the following boundary value coverage:\na) Is not correct. 4 out of 8 (11, 20 ,22 and 23)\nb) Is not correct. 3 out of 8 (15, 19 and 23)\nc) Is correct. 5 out of 8 (10, 16, 19, 22 and 23)\nd) Is not correct. 3 out of 8 (15, 19 and 22)"
	},
	{
		"question": "Which of the following statements BEST describes how test cases are derived from a use case?",
		"possibleAnswers": {
			"a": "Test cases are created to exercise defined basic, exceptional and error behaviors\nperformed by the system under test in collaboration with actors",
			"b": "Test cases are derived by identifying the components included in the use case and creating\nintegration tests that exercise the interactions of these components",
			"c": "Test cases are generated by analyzing the interactions of the actors with the system to\nensure the user interfaces are easy to use",
			"d": "Test cases are derived to exercise each of the decision points in the business process\nflows of the use case, to achieve 100% decision coverage of these flows"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. This explains that each use case specifies some behavior\nthat a subject can perform in collaboration with one or more actors. It\nalso (later) explains that tests are designed to exercise the defined\nbehaviors (basic, exceptional and errors)\nb) Is not correct. Use cases normally specify requirements, and so do not\n‘include’ the components that will implement them\nc) Is not correct. Tests based on use cases do exercise interactions\nbetween the actor and the system, but they are focused on the\nfunctionality and do not consider the ease of use of user interfaces\nd) Is not correct. Tests do cover the use case paths through the use case,\nbut there is no concept of decision coverage of these paths, and\ncertainly not of business process flows"
	},
	{
		"question": "Which of the following descriptions of statement coverage is CORRECT?",
		"possibleAnswers": {
			"a": "Statement coverage is a measure of the number of lines of source code exercised by tests",
			"b": "Statement coverage is a measure of the proportion of executable statements in the source\ncode exercised by tests",
			"c": "Statement coverage is a measure of the percentage of lines of source code (without\ncomments) exercised by tests",
			"d": "Statement coverage is a measure of the number of executable statements in the source\ncode exercised by tests"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Statement coverage is a measure of the proportion of\nexecutable statements exercised by tests. The number of executable\nstatements is often close to the number of lines of code minus the\ncomments, but this option only talks about the number of lines of code\nexercised and not the proportion exercised\nb) Is correct. Statement coverage is a measure of the proportion of\nexecutable statements exercised by tests (normally presented as a\npercentage)\nc) Is not correct. Statement coverage is a measure of the percentage of\nexecutable statements exercised by tests, however many of the lines of\nsource code are not executable (e.g., comments)\nd) Is not correct. Statement coverage is a measure of the proportion of\nexecutable statements exercised by tests. This option only talks about\nthe number of executable statements exercised and not the proportion\n(or percentage) exercised"
	},
	{
		"question": "Which of the following descriptions of decision coverage is CORRECT?",
		"possibleAnswers": {
			"a": "Decision coverage is a measure of the percentage of possible paths through the source\ncode exercised by tests",
			"b": "Decision coverage is a measure of the percentage of business flows through the\ncomponent exercised by tests",
			"c": "Decision coverage is a measure of the ‘if’ statements in the code that are exercised with\nboth the true and false outcomes",
			"d": "Decision coverage is a measure of the proportion of decision outcomes in the source code\nexercised by tests"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. A path through source code is one potential route\nthrough the code from the entry point to the exit point that could\nexercise a range of decision outcomes. Two different paths may\nexercise all but one of the same decision outcomes, and by just\nchanging a single decision outcome a new path is followed. Test cases\nthat would achieve decision coverage are typically a tiny subset of the\ntest cases that would achieve path coverage. In practice, most non-\ntrivial programs (and all programs with unconstrained loops, such as\n‘while’ loops) have a potentially infinite number of possible paths\nthrough them and so measuring the percentage covered is practically\ninfeasible\nb) Is not correct. Coverage of business flows can be a focus of use case\ntesting, but use cases rarely cover a single component. It may be\npossible to cover the decisions within business flows, but only if they\nwere specified in enough detail, however this option only suggests\ncoverage of “business flows” as a whole. Even if business flows would\ncover some decisions, the measure “Decision Coverage” don’t measure\nthe percentage of business flows, but the percentage of decision\noutcomes exercised by the business flows\nc) Is not correct. Achieving full decision coverage does require all ‘if’\nstatements to be exercised with both true and false outcomes, however,\nthere are typically several other decision points in the code (e.g., ‘case’\nstatements and the code controlling loops) that also need to be taken\ninto consideration when measuring decision coverage\nd) Is correct. Decision coverage is a measure of the proportion of decision\noutcomes exercised (normally presented as a percentage)"
	},
	{
		"question": "Which of the following BEST describes the concept behind error guessing?",
		"possibleAnswers": {
			"a": "Error guessing requires you to imagine you are the user of the test object and guess\nmistakes the user could make interacting with it",
			"b": "Error guessing involves using your personal experience of development and the mistakes\nyou made as a developer",
			"c": "Error guessing involves using your knowledge and experience of defects found in the past\nand typical mistakes made by developers",
			"d": "Error guessing requires you to rapidly duplicate the development task to identify the sort of\nmistakes a developer might make"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. error guessing is not a usability technique for guessing\nhow users may fail to interact with the test object\nb) Is not correct. Although a tester who used to be a developer may use\ntheir personal experience to help them when performing error guessing,\nthe technique is not based on prior knowledge of development\nc) Is correct. The basic concept behind error guessing is that the tester\ntries to guess what mistakes may have been made by the developer\nand what defects may be in the test object based on past-experience\n(and sometimes checklists)\nd) Is not correct. Duplicating the development task has several flaws that\nmake it impractical, such as the requirement for the tester to have\nequivalent skills to the developer and the time involved in performing\nthe development. It is not error guessing"
	},
	{
		"question": "Which of the following BEST explains a benefit of independent testing?",
		"possibleAnswers": {
			"a": "The use of an independent test team allows project management to assign responsibility for\nthe quality of the final deliverable to the test team, so ensuring everyone is aware that\nquality is the test team’s overall responsibility",
			"b": "If a test team external to the organization can be afforded, then there are distinct benefits in\nterms of this external team not being so easily swayed by the delivery concerns of project\nmanagement and the need to meet strict delivery deadlines",
			"c": "An independent test team can work totally separately from the developers, need not be\ndistracted with changing project requirements, and can restrict communication with the\ndevelopers to defect reporting through the defect management system",
			"d": "When specifications contain ambiguities and inconsistencies, assumptions are made on\ntheir interpretation, and an independent tester can be useful in questioning those\nassumptions and the interpretation made by the developer"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. Quality should be the responsibility of everyone working\non the project and not the sole responsibility of the test team\nb) Is not correct. First, it is not a benefit if an external test team does not\nmeet delivery deadlines, and second, there is no reason to believe that\nexternal test teams will feel they do not have to meet strict delivery\ndeadlines\nc) Is not correct. It is bad practice for the test team to work in complete\nisolation, and we would expect an external test team to be concerned\nwith changing project requirements and communicate well with\ndevelopers\nd) Is correct. Specifications are never perfect, meaning that assumptions\nwill have to be made by the developer. An independent tester is useful\nin that they can challenge and verify the assumptions and subsequent\ninterpretation made by the developer"
	},
	{
		"question": "Which of the following tasks is MOST LIKELY to be performed by the test manager?",
		"possibleAnswers": {
			"a": "Write test summary reports based on the information gathered during testing",
			"b": "Review tests developed by others",
			"c": "Prepare and acquire test data",
			"d": "Analyze, review, and assess requirements, specifications, and models for testability"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. One of the typical tasks of a test manager\nb) Is not correct. One of the typical tasks of a tester\nc) Is not correct. One of the typical tasks of a tester\nd) Is not correct. One of the typical tasks of a tester"
	},
	{
		"question": "Given the following examples of entry and exit criteria:\n1. The original testing budget of $30,000 plus contingency of $7,000 has been spent\n2. 96% of planned tests for the drawing package have been executed and the remaining tests\nare now out of scope\n3. The trading performance test environment has been designed, set-up and verified\n4. Current status is no outstanding critical defects and two high-priority ones\n5. The autopilot design specifications have been reviewed and reworked\n6. The tax rate calculation component has passed unit testing.\nWhich of the following BEST categorizes them as entry and exit criteria:",
		"possibleAnswers": {
			"a": "Entry criteria – 5, 6; Exit criteria – 1, 2, 3, 4",
			"b": "Entry criteria – 2, 3, 6; Exit criteria – 1, 4, 5",
			"c": "Entry criteria – 1, 3; Exit criteria – 2, 4, 5, 6",
			"d": "Entry criteria – 3, 5, 6; Exit criteria – 1, 2, 4"
		},
		"answer": "d",
		"tip": "",
		"explanation": "The correct pairings of examples to entry and exit criteria are:\n• Entry criteria\no (3) The trading performance test environment has been\ndesigned, set-up and verified – example of the need for a test\nenvironment to be ready before testing can begin\no (5) The autopilot design specifications have been reviewed and\nreworked – example of the need for the test basis to be\navailable before testing can begin\no (6) The tax rate calculation component has passed unit testing –\nexample of the need for a test object to have met the exit criteria\nfor a prior level of testing before testing can begin\n• Exit criteria\no (1) The original testing budget of $30,000 plus contingency of\n$7,000 has been spent – example of spending the testing\nbudget being a signal to stop testing\no (2) 96% of planned tests for the drawing package have been\nexecuted and the remaining tests are now out of scope –\nexample of all the planned tests being run being a signal to stop\ntesting (normally used alongside the exit criteria on outstanding\ndefects remaining)\no (4) Current status is no outstanding critical defects and two high-\npriority ones – example of the number of outstanding defects\nachieving a planned limit being a signal to stop testing (normally\nused alongside the exit criteria on planned tests being run).\nThus:\na) Is not correct\nb) Is not correct\nc) Is not correct\nd) Is correct"
	},
	{
		"question": "Which of the following statements about test estimation approaches is CORRECT?",
		"possibleAnswers": {
			"a": "With the metrics-based approach, the estimate is based on test measures from the project\nand so this estimate is only available after the testing starts",
			"b": "With the expert-based approach, a group of expert users identified by the client\nrecommends the necessary testing budget",
			"c": "With the expert-based approach, the test managers responsible for the different testing\nactivities predict the expected testing effort",
			"d": "With the metrics-based approach, an average of the testing costs recorded from several\npast projects is used as the testing budget"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Estimates may be updated as more information becomes\navailable, but estimates are needed to assist with planning before the\ntesting starts\nb) Is not correct. In the expert-based approach, the experts need to be\nexperts in testing, not in using the test object\nc) Is correct. Test Managers, who will be leading testers doing the testing,\nare considered experts in their respective areas and suitable for\nestimating the necessary resources needed\nd) Is not correct. While it is useful to know the testing costs from previous\nprojects, a more sophisticated approach is needed than simply taking\nan average of past projects (the new project may not be like the\nprevious projects, e.g., it may be far larger or far smaller than previous\nprojects)"
	},
	{
		"question": "Which of the following BEST defines risk level?",
		"possibleAnswers": {
			"a": "Risk level is calculated by adding together the probabilities of all problem situations and the\nfinancial harm that results from them",
			"b": "Risk level is estimated by multiplying the likelihood of a threat to the system by the chance\nthat the threat will occur and will result in financial damage",
			"c": "Risk level is determined by a combination of the probability of an undesirable event and the\nexpected impact of that event",
			"d": "Risk level is the sum of all potential hazards to a system multiplied by the sum of all\npotential losses from that system"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Risk is determined by considering a combination of the\nlikelihood of problem situations and the harm that may result from them\nbut cannot be calculated by adding these together (the probability\nwould be in the range 0 to 1 and the harm could be in dollars)\nb) Is not correct. Risk is determined by considering a combination of a\nlikelihood and an impact. This definition only considers likelihood and\nchance (both forms of probability) with no consideration of the impact\n(or harm)\nc) Is correct. See reasons from incorrect answers\nd) Is not correct. Risk is determined by considering a combination of a\nlikelihood and an impact. This definition only considers hazards and\nlosses (a hazard is a bad event, like a risk, while loss is a form of\nimpact) with no consideration of the likelihood (or probability)"
	},
	{
		"question": "Which of the following is MOST likely to be an example of a PRODUCT risk?",
		"possibleAnswers": {
			"a": "The expected security features may not be supported by the system architecture",
			"b": "The developers may not have time to fix all the defects found by the test team",
			"c": "The test cases may not provide full coverage of the specified requirements",
			"d": "The performance test environment may not be ready before the system is due for delivery"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. If the expected security features are not supported by the\nsystem architecture, then the system could be seriously flawed. As the\nsystem being produced is the problem here, it is a product risk\nb) Is not correct. If the developers run over budget, or run out of time, that\nis a problem with the running of the project – it is a project risk\nc) Is not correct. If the test cases do not provide full coverage of the\nrequirements, this means the testing may not fulfil the requirements of\nthe test plan – it is a project risk\nd) Is not correct. If the test environment is not ready, this means the\ntesting may not be done, or it may have to be done on a different\nenvironment and it is impacting how the project is run – it is a project\nrisk"
	},
	{
		"question": "Which of the following is LEAST likely to be an example of product risk analysis CORRECTLY\ninfluencing the testing?",
		"possibleAnswers": {
			"a": "The potential impact of security flaws has been identified as being particularly high, so\nsecurity testing has been prioritized ahead of some other testing activities",
			"b": "Testing has found the quality of the network module to be higher than expected, so\nadditional testing will be performed in that area",
			"c": "The users had problems with the user interface of the previous system, so additional\nusability testing is planned for the replacement system",
			"d": "The time needed to load web pages is crucial to the success of the new website, so an\nexpert in performance testing has been employed for this project"
		},
		"answer": "b",
		"tip": "",
		"explanation": "This question is looking for bad application of product risk analysis.\na) Is not correct. As we are told security flaws have a particularly high\nimpact, their risk level will be higher, and thus we have prioritized the\nsecurity testing ahead of some other testing. Thus, product risk analysis\nhas influenced the testing properly.\nb) Is correct. As less defects than expected have been found in the\nnetwork module, the perceived risk in this area should be lower, and so\nless testing should be focused on this area, NOT additional testing.\nThus, product risk analysis has NOT CORRECTLY influenced the\ntesting in this situation\nc) Is not correct. Because the users had problems with the user interface\nof the previous system, there is now high awareness of the risk\nassociated with the user interface, which has resulted in additional\nusability testing being planned. Thus, product risk analysis has properly\ninfluenced the thoroughness and scope of testing\nd) Is not correct. As the time needed to load web pages has been\nidentified as crucial to the success of the new website, the performance\nof the website should be considered a risk, and the employment of an\nexpert in performance testing helps to mitigate this risk. Thus, product\nrisk analysis has properly influenced the testing"
	},
	{
		"question": "You are performing system testing of a train reservation system. Based on the test cases\nperformed, you have noticed that the system occasionally reports that no trains are available,\nalthough this should be the case. You have provided the developers with a summary of the defect\nand the version of the tested system. They recognize the urgency of the defect and are now\nwaiting for you to provide further details.\nIn addition to the information already provided, the following additional information is given:\n1. Degree of impact (severity) of the defect\n2. Identification of the test object\n3. Details of the test environment\n4. Urgency/priority to fix\n5. Actual results\n6. Reference to test case specification\nWhich of this additional information is most useful to include in the defect report?",
		"possibleAnswers": {
			"a": "1, 2, 6",
			"b": "1, 4, 5, 6",
			"c": "2, 3, 4, 5",
			"d": "3, 5, 6"
		},
		"answer": "d",
		"tip": "",
		"explanation": "Considering each of the pieces of information:\n1. Degree of impact (severity) of the defect – the developers are\nalready aware of the problem and are waiting to fix it, so this is a\nless important piece of information.\n2. Identification of the test object – as the developers are already\naware of the problem and you are performing system testing, and\nyou have already provided the version of the system you are testing\nyou can assume they know the object that was being tested, so this\nis a less important piece of information.\n3. Details of the test environment – the set-up of the test environment\nmay have a noticeable effect on the test results, and detailed\ninformation should be provided, so this is an important piece of\ninformation.\n4. Urgency/priority to fix – the developers are already aware of the\nproblem and are waiting to fix it, so this is a less important piece of\ninformation.\n5. Actual results – the actual results may well help the developers to\ndetermine what is going wrong with the system, so this is an\nimportant piece of information.\n6. Reference to test case specification – this will show the developers\nthe tests you ran, including the test inputs that caused the system to\nfail (and expected results), so this is an important piece of\ninformation.\nThus:\na) Is not correct\nb) Is not correct\nc) Is not correct\nd) Is correct"
	},
	{
		"question": "Given the following test activities and test tools:\n1. Performance measurement and dynamic analysis\n2. Test execution and logging\n3. Management of testing and testware\n4. Test design\nA. Code coverage tools\nB. Dynamic analysis tools\nC. Test data preparation tools\nD. Defect management tools\nWhich of the following BEST matches the activities and tools?",
		"possibleAnswers": {
			"a": "1 – B, 2 – C, 3 – D, 4 – A",
			"b": "1 – B, 2 – A, 3 – C, 4 – D",
			"c": "1 – B, 2 – A, 3 – D, 4 – C",
			"d": "1 – A, 2 – B, 3 – D, 4 – C"
		},
		"answer": "c",
		"tip": "",
		"explanation": "The correct pairings of test activities and test tools are:\n1. Performance measurement and dynamic analysis – (b) Dynamic\nanalysis tools\n2. Test execution and logging – (a) Code coverage tools\n3. Management of testing and testware – (d) Defect management tools\n4. Test design – (c) Test data preparation tools\nThus:\na) Is not correct\nb) Is not correct\nc) Is correct\nd) Is not correct"
	},
	{
		"question": "Which of the following is MOST likely to be used as a reason for using a pilot project to introduce a\ntool into an organization?",
		"possibleAnswers": {
			"a": "The need to evaluate how the tool fits with existing processes and practices and\ndetermining what would need to change",
			"b": "The need to evaluate the test automation skills and training, mentoring and coaching needs\nof the testers who will use the tool",
			"c": "The need to evaluate whether the tool provides the required functionality and does not\nduplicate existing test tools",
			"d": "The need to evaluate the tool vendor in terms of the training and other support they provide"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct\nb) Is not correct. The evaluation of the test automation skills and training,\nmentoring and coaching needs of the testers who will use the tool\nshould have been performed as part of the tool selection activity\nc) Is not correct. The decision on whether the tool provides the required\nfunctionality and does not duplicate existing tools should have been\nperformed as part of the tool selection activity\nd) Is not correct. The evaluation of the tool vendor in terms of the training\nand other support they provide should have been performed as part of\nthe tool selection activity"
	},
	{
		"question": "What is quality?",
		"possibleAnswers": {
			"a": "Activities focused on providing confidence that quality requirements will be fulfilled",
			"b": "The degree to which a component or system satisfies the stated and implied needs of its\nvarious stakeholders",
			"c": "The degree to which a component or system protects information and data so that persons\nor other components or systems have the degree of access appropriate to their types and\nlevels of authorization",
			"d": "The total costs incurred on quality activities and issues and often split into prevention costs,\nappraisal costs, internal failure costs and external failure costs"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. This is the Glossary definition of quality assurance\nb) Is correct. This is the Glossary definition of quality\nc) Is not correct. This is the Glossary definition of security\nd) Is not correct. This is the Glossary definition of cost of quality"
	},
	{
		"question": "Which of the following is a typical test objective?",
		"possibleAnswers": {
			"a": "Preventing defects",
			"b": "Repairing defects",
			"c": "Comparing actual results to expected results",
			"d": "Analyzing the cause of failure"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. This is an objective listed\nb) Is not correct. This is debugging\nc) Is not correct. This is an activity within the test execution group of\nactivities within the test process\nd) Is not correct. This is part of debugging"
	},
	{
		"question": "A phone ringing momentarily distracts a programmer, causing the programmer to improperly\nprogram the logic that checks the upper boundary of an input variable. Later, during system\ntesting, a tester notices that this input field accepts invalid input values. The improperly coded logic\nfor the upper boundary check is:",
		"possibleAnswers": {
			"a": "The root-cause",
			"b": "The failure",
			"c": "The error",
			"d": "The defect"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. The root cause is the distraction that the programmer\nexperienced while programming\nb) Is not correct. The accepting of invalid inputs is the failure\nc) Is not correct. The error is the mistaken thinking that resulted in putting\nthe defect in the code\nd) Is correct. The problem in the code is a defect"
	},
	{
		"question": "A product owner says that your role as a tester on an Agile team is to catch all the bugs before the\nend of each iteration. Which of the following is a testing principle that could be used to respond to\nthis (false) statement?",
		"possibleAnswers": {
			"a": "Defect clustering",
			"b": "Testing shows the presence of defects",
			"c": "Absence of error fallacy",
			"d": "Root cause analysis"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Defect clustering has to do with where defects are most\nlikely to be found, not whether all of them can be found\nb) Is correct. Testing can show the presence of defects but cannot prove\ntheir absence, which makes it impossible to know if you have caught all\nthe bugs. Further, the impossibility of exhaustive testing makes it\nimpossible for you to catch all the bugs\nc) Is not correct. This principle says that you can find and remove many\nbugs but still release an unsuccessful software product, which is not\nwhat the product owner is asking you to ensure\nd) Is not correct. Root cause analysis is not a testing principle"
	},
	{
		"question": "Programmers often write and execute unit tests against code which they have written. During this\nself-testing activity, which of the following is a tester mindset that programmers should adopt to\nperform this unit testing effectively?",
		"possibleAnswers": {
			"a": "Good communication skills",
			"b": "Code coverage",
			"c": "Evaluating code defects",
			"d": "Attention to detail"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. The programmer appears to be performing unit testing on\ntheir own code\nb) Is not correct. Code coverage is useful for unit testing, but it is not a\ntester mindset\nc) Is not correct. The programmer’s mindset included contemplating what\nmight be wrong with the code, but that is not a tester’s mindset\nd) Is correct. This tester mindset, attention to detail, will help programmers\nfind defects during unit testing"
	},
	{
		"question": "Consider the following testing activities:\n1. Selecting regression tests\n2. Evaluating completeness of test execution\n3. Identifying which user stories have open defect reports\n4. Evaluating whether the number of tests for each requirement is consistent with the level of\nproduct risk\nConsider the following ways traceability can help testing:\nA. Improve understandability of test status reports to include status of test basis items\nB. Make testing auditable\nC. Provide information to assess process quality\nD. Analyze the impact of changes\nWhich of the following best matches the testing activity with how traceability can assist that\nactivity?",
		"possibleAnswers": {
			"a": "1D, 2B, 3C, 4A",
			"b": "1B, 2D, 3A, 4C",
			"c": "1D, 2C, 3A, 4B",
			"d": "1D, 2B, 3A, 4C"
		},
		"answer": "d",
		"tip": "",
		"explanation": "Traceability assists with:\n• Selecting regression tests in terms of analyzing the impact of\nchanges (1D)\n• Evaluating completeness of test execution which makes testing\nauditable (2B)\n• Identifying which user stories have open defect reports which\nimproves understandability of test status reports to include status of\ntest basis items (3A)\n• Evaluating whether the number of tests for each requirement is\nconsistent with the level of product risk which provides information to\nassess test process quality (i.e., alignment of test effort with risk)\n(4C)\nThus:\na) Is not correct\nb) Is not correct\nc) Is not correct\nd) Is correct"
	},
	{
		"question": "A tester participated in a discussion about proposed database structure. The tester identified a\npotential performance problem related to certain common user searches. This possible problem\nwas explained to the development team. Which of the following is a testing contribution to success\nthat BEST matches this situation?",
		"possibleAnswers": {
			"a": "Enabling required tests to be identified at an early stage",
			"b": "Ensuring processes are carried out properly",
			"c": "Reducing the risk of fundamental design defects",
			"d": "Reducing the risk of untestable functionality"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. While enabling required tests to be identified in an early\nstage is a testing contribution to success, there is no indication in the\nquestion that the tester did so\nb) Is not correct. Ensuring processes are carried out properly is part of\nquality assurance, not a testing contribution to success\nc) Is correct. Reducing the risk of fundamental design defects is a testing\ncontribution to success. Database structure is related to design, and\nperformance problems can be a significant product risk\nd) Is not correct. While reducing the risk of untestable functionality is a\ntesting contribution to success, the tester here has not identified\nsomething untestable, but rather something that would result in\nperformance tests failing"
	},
	{
		"question": "Which of the following is an example of a task that can be carried out as part of the test process?",
		"possibleAnswers": {
			"a": "Analyzing a defect",
			"b": "Designing test data",
			"c": "Assigning a version to a test item",
			"d": "Writing a user story"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Analyzing a defect is part of debugging, not testing\nb) Is correct. Creating test data is a test implementation task\nc) Is not correct. While a tester may need to identify a test item’s version\nfor results reporting purposes, assigning a test item’s version is part of\nconfiguration management\nd) Is not correct. Writing a user story is not a testing activity and should be\ndone by the product owner"
	},
	{
		"question": "You are running a performance test with the objective of finding possible network bottlenecks in\ninterfaces between components of a system. Which of the following statements describes this test?",
		"possibleAnswers": {
			"a": "A functional test during the integration test level",
			"b": "A non-functional test during the integration test level",
			"c": "A functional test during the component test level",
			"d": "A non-functional test during the component test level"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. While this test does match the description of an\nintegration test, it is a non-functional test\nb) Is correct. This test matches the description of an integration test and it\nis a non-functional test\nc) Is not correct. This test does not match the description of a component\ntest and it is not a functional test\nd) Is not correct. While this test is a non-functional test, it does not match\nthe description of a component test"
	},
	{
		"question": "Which of the following statements is true?",
		"possibleAnswers": {
			"a": "Impact analysis is useful for confirmation testing during maintenance testing",
			"b": "Confirmation testing is useful for regression testing during system design",
			"c": "Impact analysis is useful for regression testing during maintenance testing",
			"d": "Confirmation testing is useful for impact analysis during maintenance testing"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. While impact analysis is useful during maintenance\ntesting it is not necessary for confirmation testing since confirmation\ntesting is on the intended effects of a bug fix or other change\nb) Is not correct. Confirmation and regression testing are two separate\nactivities, and confirmation testing is not part of system design\nc) Is correct. Impact analysis can be used to select regression tests for\nmaintenance testing\nd) Is not correct. Confirmation testing is not part of impact analysis, though\nconfirmation testing will typically happen during maintenance testing"
	},
	{
		"question": "Consider the following types of defects that a test level might focus on:\na) Defects in separately testable modules or objects\nb) Not focused on identifying defects\nc) Defects in interfaces and interactions\nd) Defects in the whole test object\nWhich of the following list correctly matches test levels from the Foundation syllabus with the\ndefect focus options given above?",
		"possibleAnswers": {
			"a": "1 = performance test; 2 = component test; 3 = system test; 4 = acceptance test",
			"b": "1 = component test; 2 = acceptance test; 3 = system test; 4 = integration test",
			"c": "1 = component test; 2 = acceptance test; 3 = integration test; 4 = system test",
			"d": "1 = integration test; 2 = system test; 3 = component test; 4 = acceptance test"
		},
		"answer": "c",
		"tip": "",
		"explanation": "Performance testing is a test type, not a test level. Component testing\nfocuses on defects in separately testable modules or objects, integration\ntesting on defects in interfaces and interactions, system testing on defects\nin the whole test object, and acceptance testing is not typically focused on\nidentifying defects.\nThus:\na) Is not correct\nb) Is not correct\nc) Is correct\nd) Is not correct"
	},
	{
		"question": "A mass market operating system software product is designed to run on any PC hardware with an\nx86-family processor. You are running a set of tests to look for defects related to support of the\nvarious PCs that use such a processor and to build confidence that important PC brands will work.\nWhat type of test are you performing?",
		"possibleAnswers": {
			"a": "Performance test",
			"b": "Processor test",
			"c": "Functional test",
			"d": "Portability test"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. The test described is a non-functional test, it is a\nportability test, not a performance test\nb) Is not correct. Processor test is not a defined test type\nc) Is not correct. The test described is a non-functional test, specifically\na portability test\nd) Is correct. Testing supported devices is a non-functional test,\nspecifically a portability test"
	},
	{
		"question": "During an Agile development effort, a product owner discovers a previously unknown regulatory\nrequirement that applies to most of the user stories within a particular epic. The user stories are\nupdated to provide for the necessary changes in software behavior. The programmers on the team\nare modifying the code appropriately. As a tester on the team, what types of tests will you run?",
		"possibleAnswers": {
			"a": "Confirmation tests",
			"b": "Regression tests",
			"c": "Functional tests",
			"d": "Change-related tests"
		},
		"answer": "d",
		"tip": "",
		"explanation": "The change in behavior may be either functional or non-functional you need\nto run change-related tests, some of which are confirmation tests and\nothers are regression tests.\nThus:\na) Is not correct\nb) Is not correct\nc) Is not correct\nd) Is correct"
	},
	{
		"question": "In a formal review, what is the role name for the participant who runs an inspection meeting?",
		"possibleAnswers": {
			"a": "Facilitator",
			"b": "Programmer",
			"c": "Author",
			"d": "Project manager"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. The facilitator or moderator runs the review meetings\nb) Is not correct. This is not a role name for a formal review participant\nc) Is not correct. The facilitator or moderator runs the review meetings\nd) Is not correct. The facilitator or moderator runs the review meetings"
	},
	{
		"question": "You are reading a user story in the product backlog to prepare for a meeting with the product\nowner and a developer, noting potential defects as you go. Which of the following statements is\ntrue about this activity?",
		"possibleAnswers": {
			"a": "It is not a static test, because static testing involves execution of the test object",
			"b": "It is not a static test, because static testing is always performed using a tool",
			"c": "It is a static test, because any defects you find could be found cheaper during dynamic\ntesting",
			"d": "It is a static test because static testing does not involve execution of the test object"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. Static testing does not involve execution of the test object\nb) Is not correct. Some static tests involve the use of a tool, especially\nstatic analysis, but reviews (such as the activity described here) do not\nnecessarily involve the use of a tool\nc) Is not correct. The review activity described here is part of a static test,\nbut defects found in static tests are usually cheaper than those found in\ndynamic testing\nd) Is correct. Static testing does not involve execution of the test object"
	},
	{
		"question": "During a period of intensive project overtime, a system architecture document is sent to various\nproject participants, announcing a previously unplanned technical review to occur in one week. No\nadjustments are made to the participants’ list of assigned tasks. Based on this information alone,\nwhich of the following is a factor for review success that is MISSING?",
		"possibleAnswers": {
			"a": "Appropriate review type",
			"b": "Adequate time to prepare",
			"c": "Sufficient metrics to evaluate the author",
			"d": "Well-managed review meeting"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Technical reviews are appropriate for technical\ndocuments such as a system architecture\nb) Is correct. Adequate time for preparation is important, but people are\nworking overtime and no adjustments are made for this new set of tasks\nc) Is not correct. Gathering metrics from a review to evaluate participants\nis a factor that leads to failure, not success, because it destroys trust\nd) Is not correct. A well-managed review meeting is important, but there is\nno reason to think the review meeting will not be well managed based\non the information provided"
	},
	{
		"question": "You are working as a tester on an Agile team and have participated in over two dozen user story\nrefinement sessions with the product owner and the developers on the team at the start of each\niteration. As the reviews have gotten more effective at detecting defects in user stories and the\nproduct owner more proficient at correcting those defects, you and the team notice that the team’s\nvelocity, as shown in your burndown charts, has started to increase. Which of the following is a\nbenefit of static testing that is MOST DIRECTLY related to the team’s increased velocity?",
		"possibleAnswers": {
			"a": "Increasing total cost of quality",
			"b": "Reducing testing cost",
			"c": "Increasing development productivity",
			"d": "Reducing total cost of quality"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. Reviews reduce, not increase, the total cost of quality\nb) Is not correct. Increasing velocity is a sign of increasing development\nproductivity overall, not just testing, so B only partially applies\nc) Is correct. Velocity is a way of measuring productivity in Agile\ndevelopment\nd) Is not correct. The benefit mentioned here has to do with increasing\noverall development team productivity"
	},
	{
		"question": "You are working on a video game development project, using Agile methods. It is based on Greek\nmythology and history, and players can play key roles in scenarios such as the battles between the\nGreeks and Trojans.\nConsider the following user story and its associated acceptance criteria:\nAs a player,\nI want to be able to acquire the Rod of Midas (a new magic object),\nso that I can turn objects and other players into gold\nAC1: The Rod must work on any object or player, no matter what size, which can be\ntouched anywhere by the player holding the Rod\nAC2: Holding the Rod does not change the player holding it into gold\nAC3: Any object or player touched by the Rod transforms completely into gold within\none millisecond\nAC4: The Rod appears as shown in Prototype O.W.RoM\nAC5: The transformation starts at the point of contact with the Rod and moves at a\nrate of one meter per millisecond\nYou are participating in a checklist-based review session of this user story. This user story and its associated acceptance criteria contain which of the following typical defects\nidentified by static testing in this type of work product?",
		"possibleAnswers": {
			"a": "Deviation from standard",
			"b": "Contradiction",
			"c": "Security vulnerability",
			"d": "Coverage gaps"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. While deviation from standards is a typical, we are not\ngiven any standard with which the user stories should comply\nb) Is correct. Contradiction is a typical requirements defect. AC3 and AC5\nconflict if the Rod is touched to an object that extends more than 1\nmeter in any direction from the point at which touched, since AC1 does\nnot limit the size of the objects to be touched\nc) Is not correct. While security vulnerabilities are typical defects, there is\nnothing here related to security\nd) Is not correct. While test coverage gaps are typical defects, including\nmissing tests for acceptance criteria, we are not provided with any\ninformation about which tests do and do not exist"
	},
	{
		"question": "What is decision coverage",
		"possibleAnswers": {
			"a": "The coverage of condition outcomes",
			"b": "Decision coverage is a synonym for statement coverage",
			"c": "The coverage of executable statements",
			"d": "The coverage of decision outcomes"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. This is the Glossary definition of condition coverage\nb) Is not correct. Decision coverage is a higher level of coverage and the\ntwo terms are not defined as synonyms in the Glossary\nc) Is not correct. This is the Glossary definition of statement coverage\nd) Is correct. This is the Glossary definition of coverage as applied to\ndecisions"
	},
	{
		"question": "Prior to an iteration planning session, you are studying a user story and its acceptance criteria,\nderiving test conditions and associated test cases from the user story as a way of applying the\nprinciple of early QA and test. What test technique are you applying?",
		"possibleAnswers": {
			"a": "White-box",
			"b": "Black-box",
			"c": "Experience-based",
			"d": "Error guessing"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. Structure-based, or white-box techniques are based on\nan analysis of the architecture, detailed design, internal structure, or the\ncode of the test object\nb) Is correct. Behavior-based, or black-box techniques are based on an\nanalysis of the appropriate test basis (e.g., formal requirements\ndocuments, specifications, use cases, user stories, or business\nprocesses), which describe functional and non-functional behavior\nc) Is not correct. Experience-based techniques leverage the experience of\ndevelopers, testers, and users to determine what should be tested\nd) Is not correct. Error guessing is a type of experience-based testing,\nwhich is not black-box"
	},
	{
		"question": "Which of the following is a true statement about exploratory testing?",
		"possibleAnswers": {
			"a": "More experienced testers who have tested similar applications and technologies are likely\nto do better than less experienced testers at exploratory testing",
			"b": "Exploratory testing does not identify any additional tests beyond those that would result\nfrom formal test techniques",
			"c": "The time required to complete an exploratory testing session cannot be predicted in\nadvance",
			"d": "Exploratory testing can involve the use of black-box techniques but not white-box\ntechniques"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Exploratory testing is a form of experience-based testing,\nwhich benefits from the skills and experience of the tester\nb) b) Is not correct. Exploratory testing is useful to complement\nformal testing techniques\nc) Is not correct. In session-based test management, exploratory testing is\nconducted within a defined time-box, and the tester uses a test charter\ncontaining test objectives to guide the testing\nd) Is not correct. Exploratory testing can incorporate the use of other\nblack-box, white-box, and experience-based techniques referenced in\nthis syllabus"
	},
	{
		"question": "You are testing a mobile app that allows customers to access and manage their bank accounts.\nYou are running a test suite that involves evaluating each screen and each field on each screen against a general list of user interface best practices, derived from a popular book on the topic, that\nmaximize attractiveness, ease-of-use, and accessibility for such apps. Which of the following\noptions BEST categorizes the test technique you are using?",
		"possibleAnswers": {
			"a": "Specification-based",
			"b": "Exploratory",
			"c": "Checklist-based",
			"d": "Error guessing"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. The book provides general guidance, and is not a formal\nrequirements document, a specification, or a set of use cases, user\nstories, or business processes\nb) Is not correct. While you could consider the list as a set of test charters,\nit more closely resembles the list of test conditions\nc) Is correct. The list of user interface best practices is the list of test\nconditions\nd) Is not correct. The tests are not focused on failures that could occur, but\nrather on knowledge about what is important for the user, in terms of\nusability"
	},
	{
		"question": "Consider a mobile app that allows customers to access and manage their bank accounts. A user\nstory has just been added to the set of features that checks customers’ social media accounts and\nbank records to give personalized greetings on birthdays and other personal milestones. Which of\nthe following test techniques could a PROGRAMMER use during a unit test of the code to ensure\nthat coverage of situations when the greetings ARE supposed to occur and when the greetings\nARE NOT supposed to occur?",
		"possibleAnswers": {
			"a": "Statement testing",
			"b": "Exploratory testing",
			"c": "State transition testing",
			"d": "Decision testing"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. Statement testing exercises the executable statements in\nthe code, which might result in the absence of certain greetings not\nbeing tested\nb) Is not correct. Unless the test charter specifically mentioned testing\nboth the presence and the absence of each type of greeting, coverage\ncan be difficult to assess for an exploratory test\nc) Is not correct. State transition testing is useful for situations where the\ntest object responds differently to an input depending on current\nconditions or previous history, but in this case the test object must\ndecide whether the current date matches a particular milestone and\nthus whether to display the relevant greeting\nd) Is correct. Decision testing involves test cases that follow the control\nflows that occur from a decision point, which in this case would be\ndeciding whether a greeting should or should not be given"
	},
	{
		"question": "A batch application has been in production unchanged for over two years. It runs overnight once a\nmonth to produce statements that will be e-mailed to customers. For each customer, the\napplication goes through every account and lists every transaction on that account in the last\nmonth. It uses a nested-loop structure to process customers (outer loop), each customer’s\naccounts (middle loop), and each account’s transactions (inner loop).\nOne night, the batch application terminates prematurely, failing to e-mail statements to some\ncustomers, when it encounters a customer with one account for which no transactions occurred in\nthe last month. This is a very unusual situation and has not occurred in the years since this\napplication was placed in production.\nWhile fixing the defect, a programmer asks you to recommend test techniques that are effective\nagainst this kind of defect. Which of the following test techniques would most likely have been able\nto detect the underlying defect?",
		"possibleAnswers": {
			"a": "Decision testing",
			"b": "Statement testing",
			"c": "Checklist-based testing",
			"d": "Error guessing"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. For a loop construct, statement coverage only requires that\nall statements within the loop are executed, but decision coverage\nrequires testing of both the conditions where the loop is executed and\nwhen it is bypassed\nb) Is not correct. For a loop construct, statement coverage only requires\nthat all statements within the loop are executed, but decision coverage\nrequires testing of both the conditions where the loop is executed and\nwhen it is bypassed\nc) Is not correct. Checklists are based on experience, defect and failure\ndata, knowledge about what is important for the user, and an\nunderstanding of why and how software fails, none of which is likely to\nhave led to the inclusion of such a test condition\nd) Is not correct. While it is possible that someone might anticipate a\ndeveloper making the mistaken assumption that there would always be\nat least one transaction in a month for every account, only decision\ntesting guarantees testing of that condition"
	},
	{
		"question": "You are testing an unattended gasoline pump that only accepts credit cards. Once the credit card\nis validated, the pump nozzle placed into the tank, and the desired grade selected, the customer\nenters the desired amount of fuel in gallons using the keypad. The keypad only allows the entry of\ndigits. Fuel is sold in tenths (0.1) of a gallon, up to 50.0 gallons.\nWhich of the following is a minimum set of desired amounts that covers the equivalence partitions\nfor this input?",
		"possibleAnswers": {
			"a": "0.0, 20.0, 60.0",
			"b": "0.0, 0.1, 50.0",
			"c": "0.0, 0.1, 50.0, 70.0",
			"d": "-0.1, 0.0, 0.1, 49.9, 50.0, 50.1"
		},
		"answer": "a",
		"tip": "",
		"explanation": "There are three equivalence partitions:\n• No sale completed (0.0 gallons)\n• A valid sale occurs (0.1 to 50.0 gallons)\n• An invalid amount is selected (50.1 or more gallons)\nThus:\na) Is correct. This set of input values has exactly one test per equivalence\npartition\nb) Is not correct. This set of input values has does not cover the invalid\namount partition\nc) Is not correct. This set of input values has two tests for the valid sale\nequivalence partition, which is not the minimum\nd) Is not correct. This set of input values covers the three-point boundary\nvalues for the two boundaries, not the minimum number required to\ncover the equivalence partitions"
	},
	{
		"question": "You are testing an e-commerce system that sells cooking supplies such as spices, flour, and other\nitems in bulk. The units in which the items are sold are either grams (for spices and other\nexpensive items) or kilograms (for flour and other inexpensive items). Regardless of the units, the\nsmallest valid order amount is 0.5 units (e.g., half a gram of cardamom pods) and the largest valid\norder amount is 25.0 units (e.g., 25 kilograms of sugar). The precision of the unit’s field is 0.1 units.\nWhich of the following is a set of input values that cover the boundary values with two-point\nboundary values for this field?",
		"possibleAnswers": {
			"a": "0.3, 10.0, 28.0",
			"b": "0.4, 0.5, 0.6, 24, 9, 25, 0, 25.1",
			"c": "0.4, 0.5, 25.0 25.1",
			"d": "0.5, 0.6, 24.9, 25.0"
		},
		"answer": "c",
		"tip": "",
		"explanation": "There are three equivalence partitions, with the boundaries as shown:\n• Invalid too low (0.4 and below)\n• Valid (0.5 to 25.0)\n• Invalid too high (25.1 and above)\nThus:\na) Is not correct. None of those four boundary values are included in this\nset of tests. These tests do cover the equivalence partitions\nb) Is not correct. All these four boundary values are included in this set of\ntests, but two additional values are included, one for each boundary.\nThese are the values associated with three-point boundary value\nanalysis\nc) Is correct. Each of those four two-point boundary values are included in\nthis set of tests\nd) Is not correct. These four values are all included in the valid partition"
	},
	{
		"question": "Consider the following decision table for the portion of an online airline reservation system that\nallows frequent flyers to redeem points for reward travel:\nCondition 1 2 3\nAccount/password okay N Y Y\nSufficient points - N Y\nAction\nShow flight history N Y Y\nAllow reward travel N N Y\nSuppose that there are two equivalence partitions for the condition where “Account/password\nokay” is not true, one where the account is invalid and another where the account is valid, but the\npassword is invalid. Suppose that there is only one equivalence partition corresponding to the\ncondition where “Account/password okay” is true, where both the account and password are valid.\nIf you want to design tests to cover the equivalence partitions for “Account/password okay” and\nalso for this portion of the decision table, what is the minimum number of tests required?",
		"possibleAnswers": {
			"a": "2",
			"b": "3",
			"c": "4",
			"d": "9"
		},
		"answer": "c",
		"tip": "",
		"explanation": "There is at least one test for each column in the decision table. However,\ncolumn one requires two tests, one where the account is invalid and\nanother where the account is valid, but the password is invalid, so the\nminimum number of tests is four.\nThus:\na) Is not correct\nb) Is not correct\nc) Is correct\nd) Is not correct"
	},
	{
		"question": "You are testing an e-commerce system that sells cooking supplies such as spices, flour, and other\nitems in bulk. The units in which the items are sold are either grams (for spices and other\nexpensive items) or kilograms (for flour and other inexpensive items). Regardless of the units, the\nsmallest valid order amount is 0.5 units (e.g., half a gram of cardamom pods) and the largest valid\norder amount is 25.0 units (e.g., 25 kilograms of sugar). The precision of the units’ field is 0.1 units. Which of the following is a MINIMAL set of input values that cover the equivalence partitions for\nthis field?",
		"possibleAnswers": {
			"a": "10.0, 28.0",
			"b": "0.4, 0.5, 25.0, 25.1",
			"c": "0.2, 0.9, 29.5",
			"d": "12.3"
		},
		"answer": "c",
		"tip": "",
		"explanation": "There are three equivalence partitions, with the boundaries as shown:\n• Invalid too low (0.4 and below)\n• Valid (0.5 to 25.0)\n• Invalid too high (25.1 and above)\nThus:\na) Is not correct. Only two of the equivalence partitions are covered in this\nset of tests\nb) Is not correct. Each of those four boundary values are included in this\nset of tests, but the question asked for equivalence partition coverage\nwith minimal tests, so either 0.5 or 25.0 should be dropped\nc) Is correct. Each of these three equivalence partitions are covered in this\nset of tests\nd) Is not correct. Only one of those equivalence partitions is covered by\nthis test"
	},
	{
		"question": "You are working as a tester on an online banking system. Availability is considered one of the top\nproducts (quality) risks for the system. You find a reproducible failure that results in customers\nlosing their connections to the bank Web site when transferring funds between common types of\naccounts and being unable to reconnect for between three and five minutes.\nWhich of the following would be a good summary for a defect report for this failure, one that\ncaptures both the essence of the failure and its impact on stakeholders?",
		"possibleAnswers": {
			"a": "Web server logs show error 0x44AB27 when running test 07.005, which is not an expected\nerror message in /tmp filesystem",
			"b": "Developers have introduced major availability defect which will seriously upset our\ncustomers",
			"c": "Performance is slow and reliability flaky under load",
			"d": "Typical funds-transfer transaction results in termination of customer session, with a delay in\navailability when attempting to reconnect"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. While this information is useful for developers, it does not\nprovide managers with a sense of the impact on product quality\nb) Is not correct. This summary does not provide developers or managers\nwith the necessary information and attacks the developers\nc) Is not correct. This summary does not provide developers or managers\nwith the necessary information and attacks the developers\nd) Is correct. This summary gives a good sense of the failure and its\nimpact"
	},
	{
		"question": "You are testing a mobile app that allows users to find a nearby restaurant, based on the type of\nfood they want to eat. Consider the following list of test cases, priorities (smaller number is high\npriority), and dependencies, in the following format:\nTest case number Test condition covered Priority Logical dependency\n01.001 Select type of food 3 none\n01.002 Select restaurant 2 01.001\n01.003 Get directions 1 01.002\n01.004 Call restaurant 1 01.002\nWhich of the following is a possible test execution schedule that considers both priorities and\ndependencies?",
		"possibleAnswers": {
			"a": "01.001, 01.002, 01.003, 01.005,",
			"b": "01.001, 01.002, 01.004, 01.003",
			"c": "01.003, 01.004, 01.002, 01.001",
			"d": "01.001, 01.002, 01.004, 01.005"
		},
		"answer": "b",
		"tip": "",
		"explanation": "Test 01.001 must come first, followed by 01.002, to satisfy dependencies.\nAfterwards, 01.004 and 01.003 should be run in either order, followed by\n01.005, to satisfy priority.\nThus:\na) Is not correct\nb) Is not correct\nc) Is not correct\nd) Is correct"
	},
	{
		"question": "Which of the following is a common test metric often used to monitor BOTH test preparation and\ntest execution?",
		"possibleAnswers": {
			"a": "Test case status",
			"b": "Defect find/fix rates",
			"c": "Test environment preparation",
			"d": "Estimated cost to find the next defect"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Percentage of test cases prepared is a common metric\nduring test preparation while percentage of test cases passed, failed,\nnot run, etc., are common during test execution\nb) Is not correct. Defect reports are typically filed during test execution,\nbased on failures found\nc) Is not correct. Test environment preparation is part implementation and\nwould generally be complete before test execution\nd) Is not correct. Defects are typically reported during test execution,\nbased on failures found, so the cost to find the next defect is available\nduring test execution only"
	},
	{
		"question": "Which of the following are two factors that can be used to determine the level of risk?",
		"possibleAnswers": {
			"a": "Testing and development",
			"b": "Dynamic and reactive",
			"c": "Statement and decision",
			"d": "Likelihood and impact"
		},
		"answer": "d",
		"tip": "",
		"explanation": "The level of risk will be determined by the likelihood of an adverse event\nhappening and the impact (the harm) from that event.\nThus:\na) Is not correct\nb) Is not correct\nc) Is not correct\nd) Is correct"
	},
	{
		"question": "You are working as a project manager on an in-house banking software project. To prevent rework\nand excessive find/fix/retest cycles, the following process has been put in place for resolving a\ndefect once it is found in the test lab:\n1. The assigned developer finds and fixes the defect, then creates an experimental\nbuild\n2. A peer developer reviews, unit tests, and confirmation tests the defect fix on his/her\ndesktop\n3. A tester – usually the one who found the defect – confirmation tests the defect fix in\nthe development environment\n4. Once a day, a new release with all confirmed defect fixes included, is installed in the\ntest environment\n5. The same tester from step 3 confirmation tests the defect fix in the test environment\nNevertheless, a large number of defects which the testers confirmed as fixed in the development\nenvironment (in step 3) are somehow failing confirmation testing in the test environment, with the\nresulting rework and cycle time outcomes. You have the highest confidence in your testers and\nhave ruled out mistakes or omissions in step 3.\nWhich of the following is the MOST likely part of the process to check next?",
		"possibleAnswers": {
			"a": "The activity of developers, who may not be adequately testing in step 2",
			"b": "The activity of testers, who may be confused about what to test in step 5",
			"c": "Configuration management, which may not be maintaining the integrity of the product in\nstep 4",
			"d": "The activity of developers, who may not be fixing defects properly in step 1"
		},
		"answer": "c",
		"tip": "",
		"explanation": "a) Is not correct. If inadequate developer testing were the problem, the\nconfirmation test would not pass in step 3\nb) Is not correct. The same tester who successfully performed the\nconfirmation test in step 3 is repeating it in step 5\nc) Is correct. Configuration management maintains the integrity of the\nsoftware. If a test that passes in step 3 fails in step 5, then something is\ndifferent between those two steps. One possible difference is the test\nobject, the option listed here. Another possible difference is the\nbetween the development environment and the test environment, but\nthat is not an option listed here\nd) Is not correct. If the developers were not fixing the defect, the\nconfirmation test would not pass in step 3"
	},
	{
		"question": "You are engaged in planning a test effort for a new mobile banking application. As part of\nestimation, you first meet with the proposed testers and others on the project. The team is well-\ncoordinated and has already worked on similar projects. To verify the resulting estimate, you then\nrefer to some industry averages for testing effort and costs on similar projects, published by a\nreputable consultant.\nWhich statement accurately describes your estimation approach?",
		"possibleAnswers": {
			"a": "A simultaneous expert-based and metrics-based approach",
			"b": "Primarily an expert-based approach, augmented with a metrics-based approach",
			"c": "Primarily a metrics-based approach, augmented with an expert-based approach",
			"d": "Primarily planning poker, checked by velocity from burndown charts"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. The two methods are used sequentially, not\nsimultaneously\nb) Is correct. The primary sources of information come from the\nexperienced testers, who are the experts. The consultant’s industry\naverages augment the original estimate from published metrics\nc) Is not correct. The expert-based approach is the primary approach,\naugmented by a metrics-based approach\nd) Is not correct. We do not know if this project is following Agile methods,\nand burndown charts do not come from external consultants"
	},
	{
		"question": "During a project following Agile methods, you find a discrepancy between the developer’s\ninterpretation of an acceptance criteria and the product owner’s interpretation, which you bring up\nduring a user story refinement session. Which of the following is a benefit of test independence\nexemplified by this situation?",
		"possibleAnswers": {
			"a": "Recognizing different kinds of failures",
			"b": "Taking primary responsibility for quality",
			"c": "Removing a defect early",
			"d": "Challenging stakeholder assumptions"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. While recognizing different kinds of failures is a benefit of\ntester independence, in the scenario here no code yet exists that can\nfail, and the problem is that the developer and product owner are both\nassuming different things about the acceptance criteria\nb) Is not correct. Developers losing a sense of responsibility for quality is a\ndrawback, not a benefit\nc) Is not correct. While the effect of the discovery of this disagreement is\nthe earlier removal of the defect, prior to coding, defects can be\ndiscovered early by various people, not just independent testers\nd) Is correct. Challenging stakeholder assumptions is a benefit of tester\nindependence, and here the developer and product owner are both\nassuming different things about the acceptance criteria"
	},
	{
		"question": "You are defining the process for carrying out product risk analysis as part of each iteration on an\nAgile project. Which of the following is the proper place to document this process in a test plan?",
		"possibleAnswers": {
			"a": "Scope of testing",
			"b": "Approach of testing",
			"c": "Metrics of testing",
			"d": "Configuration management of the test object"
		},
		"answer": "b",
		"tip": "",
		"explanation": "a) Is not correct. While scope is a topic addressed in a test plan, the\nimplementation of a risk-based testing strategy on this project is the\napproach, so this topic should be addressed in that section\nb) Is correct. Approach is a topic addressed in a test plan and the\nimplementation of a risk-based testing strategy on this project is the\napproach\nc) Is not correct. While metrics for test monitoring and control is a topic\naddressed in a test plan, the implementation of a risk-based testing\nstrategy on this project is the approach, so this topic should be\naddressed in that section\nd) Is not correct. Configuration management is not a topic addressed in a\ntest plan"
	},
	{
		"question": "Consider the following list of undesirable outcomes that could occur on a mobile app development\neffort:\nA. Incorrect totals on screens\nB. Change to acceptance criteria during acceptance testing\nC. Users find the soft keyboard too hard to use with your app\nD. System responds too slowly to user input during search string entry\nE. Testers not allowed to report test results in daily standup meetings. Which of the following properly classifies these outcomes as project and product risks?",
		"possibleAnswers": {
			"a": "Product risks: B, E; Project risks: A, C, D",
			"b": "Product risks: A, C, D; Project risks: B, E",
			"c": "Product risks: A, C, D, E Project risks: B",
			"d": "Product risks: A, C Project risks: B, D, E"
		},
		"answer": "b",
		"tip": "",
		"explanation": "Product risks exist when a work product may fail to satisfy legitimate needs,\nwhile project risks are situations that could have a negative impact on the\nproject’s ability to achieve its objectives. So:\nA. Incorrect totals on screens = product risk\nB. Change to acceptance criteria during acceptance testing = project\nrisk\nC. Users find the soft keyboard too hard to use with your app = product\nrisk\nD. System responds too slowly to user input during search string entry\n= product risk\nE. Testers not allowed to report test results in daily standup meetings =\nproject risk\nThus:\na) Is not correct. This list is entirely backwards\nb) Is correct\nc) Is not correct. While E is about product quality and product risks, the\nfailure to communicate test results is a project risk per the syllabus\nd) Is not correct. Product risks can be functional and non-functional, so d\nis also a product risk"
	},
	{
		"question": "You have just completed a pilot project for a regression testing tool. You understand the tool much\nbetter and have tailored your testing process to it. You have standardized an approach to using the\ntool and its associated work products. Which of the following is a typical test automation pilot\nproject goal that remains to be carried out?",
		"possibleAnswers": {
			"a": "Learn more details about the tool",
			"b": "See how the tool would fit with existing processes and practices",
			"c": "Decide on standard ways of using, managing, storing, and maintaining the tool and the test\nassets",
			"d": "Assess whether the benefits will be achieved at reasonable cost"
		},
		"answer": "d",
		"tip": "",
		"explanation": "a) Is not correct. This is an objective for a pilot, but you have achieved it\nbecause you understand the tool much better due to the pilot\nb) Is not correct. This is an objective for a pilot, but you have achieved it\nbecause you have tailoring your testing processes\nc) Is not correct. This is an objective for a pilot, but you have achieved it\nbecause you have standardized an approach to using the tool and its\nassociated work products\nd) Is correct. Assessing the benefits and configuring the metrics collection\nare the two objectives missing from this list"
	},
	{
		"question": "Which of the following tools is most useful for reporting test metrics?",
		"possibleAnswers": {
			"a": "Test management tool",
			"b": "Static analysis tool",
			"c": "Coverage tool",
			"d": "Model-Based testing tools"
		},
		"answer": "a",
		"tip": "",
		"explanation": "a) Is correct. Test management tools support the activities associated with\ntest manager including metrics\nb) Is not correct. Static code analysis metrics would have to do with the\ncode only, not testing as a whole\nc) Is not correct. These tools report on test basis coverage and code\ncoverage only, not testing as a whole\nd) Is not correct. Model-Based testing tools focus on one specific area, not\ntesting as a whole"
	}
]